(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    489101,       9860]
NotebookOptionsPosition[    478010,       9695]
NotebookOutlinePosition[    478385,       9711]
CellTagsIndexPosition[    478342,       9708]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Test circles", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716921368936224`*^9, 
  3.7716921678359394`*^9}},ExpressionUUID->"9727f5f8-a7ea-4c09-a35b-\
613d4dab6c65"],

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"-", "t"}], "]"}], "-", "3"}], ",", 
              RowBox[{"Sin", "[", 
               RowBox[{"-", "t"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"Sin", "[", 
               RowBox[{"-", "t"}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "-", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "7"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716023198972893`*^9, 3.7716027705642576`*^9}, {
   3.7716054005818167`*^9, 3.7716054868074284`*^9}, {3.7716055386529703`*^9, 
   3.7716055833278403`*^9}, {3.7716056530003867`*^9, 
   3.7716056549218054`*^9}, {3.771605786173656*^9, 3.7716059907877264`*^9}, {
   3.771607005502472*^9, 3.771607129098442*^9}, 3.7716921678359394`*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"b169b39d-9651-4469-a02c-84ce19c289e7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {414., {41., 47.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$193448$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$193448$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[{
          Circle[{-3, 0}, 1], 
          Line[{{-3, 0}, {Cos[-$CellContext`t$$] - 3, 
             Sin[-$CellContext`t$$]}, {0, 
             Sin[-$CellContext`t$$]}}]}, {
         Axes -> True, PlotRange -> {-1, 1}}], 
        Plot[
         Sin[$CellContext`x - $CellContext`t$$], {$CellContext`x, 0, 7}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 2 Pi, AnimationRunning -> 
         False, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{471., {86., 93.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716024600687366`*^9, 3.771602474834721*^9}, 
   3.7716025051607475`*^9, 3.7716025528916073`*^9, {3.7716026298082094`*^9, 
   3.771602678820475*^9}, {3.771602747175188*^9, 3.7716027709704075`*^9}, {
   3.7716054044448133`*^9, 3.771605488382067*^9}, {3.7716055576170516`*^9, 
   3.7716055663810935`*^9}, {3.771605858623825*^9, 3.7716058856812844`*^9}, {
   3.77160591829733*^9, 3.771605991381669*^9}, {3.77160701786899*^9, 
   3.7716070793578324`*^9}, 3.771607131619079*^9, 3.7716921678359394`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"3bea1c36-bb26-45ab-8325-738d7681d61e"],

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Graphics", "[", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
         "\[IndentingNewLine]", "\t\t\t\t", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"-", "t"}], "]"}], "-", "3"}], ",", 
              RowBox[{"Sin", "[", 
               RowBox[{"-", "t"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"Sin", "[", 
               RowBox[{"-", "t"}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "\t\t\t", "}"}], ",", "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "-", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "7"}], "}"}]}], "]"}]}], "\n", "\t", 
    "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716072094431295`*^9, 3.771607313004243*^9}, 
   3.7716921678359394`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"023134e3-91a8-4e31-9ca1-52cf2fda25a8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {
    414., {113., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$2509$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$2509$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[{
          Circle[{-3, 0}, 1], 
          Line[{{-3, 0}, {Cos[-$CellContext`t$$] - 3, 
             Sin[-$CellContext`t$$]}, {0, 
             Sin[-$CellContext`t$$]}}]}, {
         Axes -> True, PlotRange -> {-3, 3}}], 
        Plot[
         Sin[$CellContext`x - $CellContext`t$$], {$CellContext`x, 0, 7}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 2 Pi, AnimationRunning -> 
         False, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{471., {158., 165.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7716646029693513`*^9, 3.771666977111513*^9, 
  3.7716921678359394`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"7cc4475b-ff01-42b4-833c-06b70a8894f9"],

Cell["For Sin[x]+Cos[2x]", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771607348192489*^9, 3.7716073665435114`*^9}, 
   3.7716921678359394`*^9},ExpressionUUID->"1432c62e-a3f4-4ed6-8b15-\
446955622ce9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierSeries", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "x"}], "]"}]}], ",", "x", ",", "3"}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716074323188677`*^9, 3.7716074562959175`*^9}, 
   3.7716921678359394`*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"7a908703-b7db-49f8-9796-d0014cfcb707"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "x"}], "]"}], "+", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771607451289588*^9, 3.7716074569233027`*^9}, 
   3.7716921678359394`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"7e0c001b-153f-4e75-8edf-86dd8f4161f5"],

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Graphics", "[", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
         "\n", "\t\t\t\t", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"-", "t"}], "]"}], "-", "3"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"-", "t"}], "]"}]}], "}"}], ",", "1"}], "]"}], ",", 
         "\[IndentingNewLine]", "\t\t\t\t", 
         RowBox[{"Line", "[", 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "0"}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"-", "t"}], "]"}], ",", 
               RowBox[{"Sin", "[", 
                RowBox[{"-", "t"}], "]"}]}], "}"}]}], ",", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "0"}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"-", "t"}], "]"}], ",", 
               RowBox[{"Sin", "[", 
                RowBox[{"-", "t"}], "]"}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"-", "2"}], "t"}], "]"}]}], ",", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"-", "t"}], "]"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "t"}], "]"}]}]}], "}"}]}], "\n", 
           "\t\t\t\t", "}"}], "]"}]}], "\[IndentingNewLine]", "\t\t\t", "}"}],
        ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"x", "-", "t"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"x", "-", "t"}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "7"}], "}"}]}], "]"}]}], "\n", "\t", 
    "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.771607342305816*^9, {3.771607390671262*^9, 3.77160741580812*^9}, {
   3.7716074773447533`*^9, 3.7716075763512278`*^9}, {3.7716076118818045`*^9, 
   3.771607717125735*^9}, {3.771607805398431*^9, 3.771607900462531*^9}, 
   3.77169216783994*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"0c74168b-b54a-47ef-8131-5e5788fe977b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {
    414., {113., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$2595$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$2595$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[{
          Circle[{-3, 0}, 1], 
          Circle[{Cos[-$CellContext`t$$] - 3, 
            Sin[-$CellContext`t$$]}, 1], 
          Line[{{-3, 0}, {-3, 0} + {
              Cos[-$CellContext`t$$], 
              Sin[-$CellContext`t$$]}, {-3, 0} + {
              Cos[-$CellContext`t$$], 
              Sin[-$CellContext`t$$]} + {-Sin[(-2) $CellContext`t$$], 
              Cos[(-2) $CellContext`t$$]}, {
            0, Sin[-$CellContext`t$$] + Cos[(-2) $CellContext`t$$]}}]}, {
         Axes -> True, PlotRange -> {-3, 3}}], 
        Plot[
        Sin[$CellContext`x - $CellContext`t$$] + 
         Cos[2 ($CellContext`x - $CellContext`t$$)], {$CellContext`x, 0, 7}]],
       "Specifications" :> {{$CellContext`t$$, 0, 2 Pi, AnimationRunning -> 
         False, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{471., {158., 165.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.771608677768014*^9, 3.771664603141215*^9, 
  3.7716669772364845`*^9, 3.77169216783994*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"96d54522-d3e6-4ace-abe5-d189110126f6"],

Cell[BoxData[
 RowBox[{"Attributes", "[", "Plot", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716092865674505`*^9, 3.7716092901995735`*^9}, 
   3.77169216783994*^9},
 CellLabel->
  "In[125]:=",ExpressionUUID->"5610ca83-e834-4a6b-87cd-1d55f96554e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldAll", ",", "Protected", ",", "ReadProtected"}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7716092906059413`*^9, 3.77169216783994*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"e9783590-51c4-466b-8952-a43cdf74e741"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierCosCoefficient", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", "x", ",", "5"}], "]"}], "//", 
  "ComplexExpand"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716227439325323`*^9, 3.7716227604214506`*^9}, {
   3.7716235520699296`*^9, 3.771623555246995*^9}, 3.77169216783994*^9},
 CellLabel->
  "In[186]:=",ExpressionUUID->"31b77ec8-74f7-4cfd-85b3-63602d0d191f"],

Cell[BoxData["0"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.771609426849337*^9, {3.771622746374999*^9, 3.7716227613931727`*^9}, 
   3.7716235558875837`*^9, 3.77169216783994*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"ca9985f2-617e-47c9-878d-f37c39286021"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"#1", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}], "&"}], "@", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"FourierSeries", "[", 
     RowBox[{
      RowBox[{"x", "^", "2"}], ",", "x", ",", "5"}], "]"}], "//", 
    "ComplexExpand"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771608399674526*^9, 3.771608412429923*^9}, {
   3.771609248816079*^9, 3.771609267380443*^9}, {3.7716092991349382`*^9, 
   3.771609355446021*^9}, 3.77169216783994*^9},
 CellLabel->
  "In[128]:=",ExpressionUUID->"6ab4688a-bdd1-476b-89da-35d2ec72608a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
W6fNSh7n1nivkw3VyPxSUMu8gioUGp07YqVYg3TbaRp4lFXh1OsYKtPPtUgq
h/rdpYOqoCTo78XP+wmN2hIyNo/heqMdTdp0C7L/uu2974IqHMpaV6xk/oas
Qo/cem+tCk2HjeT5/L6hs3DnhomNKjixK3XcWviGdPK3XG/aqYL76M2fit96
kETYpm2tM17PofReSOpFw1rrhpa3VMHi/W2MX7Ef2RYtEUOfqgI7W550ddYf
dDXgzI7BM1WoaLv+WW/yD7p5pvQ7y3NVaL2jR6KTHUIPV28+iYhWhZQ2nl7l
3CGUf3hzO+alKvAr6zvulgyjzdrdntc5qmATnMFx6fsoon5uU+yUpwqllma5
B0XHEIt9bbhsgSrQrp3NKnIYQ6L0gTr5xaognJy1ULA2hnQM6IvLKvH63175
UkmaQBFfWcLrG1WBqGQGlLQpFJ/m6hTcrAoRnZSLrBtTKM2z7Zh+iyq8L/rr
xG48jd7yRmy1tKlCR/RWbdrfadR/jsup65sqBNVdGvtyZRZJDwscGxrG/Uzu
L7EcX0BKpT6i6aP4fBayeXR8FpD6g5+bDuOqEDv2eB7/JTKUflk4OaUKvJ6T
tVGii+j6FaLo4qIqFGMv6Pppl5Cvxv3N4mV8v8yVJ7xhCT1gHer2XFWFhrsa
nyd9l1BsQdqjjQ1VuPrp3c+TG0so1Z/WsWpLFbzjsr5oHlxGOacdtH13VEGi
8682k9cyKiU3iGj+UwWfuZaynPJlVL0stbm7qwosApRbUpvL6H91J8qj
       "]]},
     Annotation[#, "Charting`Private`Tag$324607#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19.999999591836733`}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716093428641768`*^9, 3.7716093566514654`*^9}, 
   3.77169216783994*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"6326de81-2e4a-45e3-9f6c-65e55de7ddb1"],

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771609331889758*^9, 3.771609333432808*^9}, 
   3.77169216783994*^9},ExpressionUUID->"24455ff6-51f4-4959-986a-\
96e5dd073031"],

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Graphics", "[", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", "4"}], "]"}], ",", 
         "\n", "\t\t\t\t", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], 
               RowBox[{"Cos", "[", "t", "]"}]}], "-", "7"}], ",", 
             RowBox[{
              RowBox[{"-", "4"}], 
              RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", "1"}], "]"}], 
         ",", "\n", "\t\t\t\t", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"-", "t"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"-", "4"}], 
               RowBox[{"Sin", "[", 
                RowBox[{"-", "t"}], "]"}]}]}], "}"}], "+", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "t"}], "]"}], ",", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"(", 
            RowBox[{"4", "/", "9"}], ")"}]}], "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"-", "t"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"-", "4"}], 
               RowBox[{"Sin", "[", 
                RowBox[{"-", "t"}], "]"}]}]}], "}"}], "+", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "t"}], "]"}], ",", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}], "+", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"4", "/", "9"}], ")"}]}], 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"-", "3"}], "t"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "/", "9"}], ")"}], 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"-", "3"}], "t"}], "]"}]}]}], "}"}]}], ",", "0.25"}],
           "]"}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
         RowBox[{"Line", "[", 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], 
                RowBox[{"Cos", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"-", "4"}], 
                RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"-", "t"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"-", "4"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"-", "t"}], "]"}]}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "t"}], "]"}], ",", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"-", "t"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"-", "4"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"-", "t"}], "]"}]}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "t"}], "]"}], ",", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"4", "/", "9"}], ")"}]}], 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"-", "3"}], "t"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "/", "9"}], ")"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"-", "3"}], "t"}], "]"}]}]}], "}"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"-", "t"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"-", "4"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"-", "t"}], "]"}]}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "t"}], "]"}], ",", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"4", "/", "9"}], ")"}]}], 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"-", "3"}], "t"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "/", "9"}], ")"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"-", "3"}], "t"}], "]"}]}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.25", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"-", "4"}], "t"}], "]"}]}], ",", 
               RowBox[{"0.25", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"-", "4"}], "t"}], "]"}]}]}], "}"}]}], ",", "\n", 
            "\t\t\t\t", "\n", "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"-", "t"}], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "t"}], "]"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "/", "9"}], ")"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"-", "3"}], "t"}], "]"}]}], "+", 
               RowBox[{"0.25", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"-", "4"}], "t"}], "]"}]}]}]}], "}"}]}], "}"}], 
          "]"}]}], "\[IndentingNewLine]", "\t\t\t\t", "\n", "\t\t\t", "}"}], 
       ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}], "-", 
        RowBox[{
         FractionBox["4", "9"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", 
           RowBox[{"(", 
            RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", 
           RowBox[{"(", 
            RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "-", 
        RowBox[{
         FractionBox["4", "25"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"5", 
           RowBox[{"(", 
            RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", 
     RowBox[{"Plot", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"x", "-", "t"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "t"}], ")"}]}], "]"}], "-", 
        RowBox[{
         FractionBox["4", "9"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", "t"}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", "t"}], ")"}]}], "]"}]}], "-", 
        RowBox[{
         FractionBox["4", "25"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", "t"}], ")"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}], "*)"}], "\n", 
    "\t", "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.771608431412555*^9, {3.771608638791231*^9, 3.7716086692351913`*^9}, {
   3.7716087226244984`*^9, 3.7716087859195843`*^9}, {3.771608873812832*^9, 
   3.771608922848485*^9}, {3.771609009842147*^9, 3.7716090569350233`*^9}, {
   3.771609205852003*^9, 3.7716092294762297`*^9}, {3.7716093756552205`*^9, 
   3.7716094687026215`*^9}, {3.771609507345714*^9, 3.7716095465697412`*^9}, {
   3.771609614096453*^9, 3.771609668347335*^9}, {3.7716097144053125`*^9, 
   3.7716097206347384`*^9}, {3.771609820048957*^9, 3.7716098650952687`*^9}, {
   3.7716098979219713`*^9, 3.771609987565382*^9}, {3.771610019400961*^9, 
   3.771610047277464*^9}, {3.7716140451468897`*^9, 3.77161426960376*^9}, {
   3.7716145085093265`*^9, 3.7716145115350885`*^9}, {3.7716146062907605`*^9, 
   3.771614633027851*^9}, {3.771614812610742*^9, 3.771614923094205*^9}, {
   3.7716160909708366`*^9, 3.771616162483356*^9}, {3.7716169247539306`*^9, 
   3.771617001117613*^9}, {3.7716192196791415`*^9, 3.7716193548582067`*^9}, {
   3.7716193860622387`*^9, 3.7716194255463486`*^9}, {3.7716195106277666`*^9, 
   3.771619534213311*^9}, {3.771624352161831*^9, 3.7716243609636507`*^9}, {
   3.771624494227728*^9, 3.771624588783591*^9}, 3.7716921678439384`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"23c71397-0cef-4b99-9691-eb1993181fe5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = -0.3271981020560073, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, (-2) Pi}}, Typeset`size$$ = {
    414., {129., 136.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$2662$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$2662$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[{
          Circle[{-7, 0}, 4], 
          
          Circle[{(-4) Cos[$CellContext`t$$] - 7, (-4) Sin[$CellContext`t$$]},
            1], 
          
          Circle[{-7, 
            0} + {(-4) Cos[-$CellContext`t$$], (-4) Sin[-$CellContext`t$$]} + {
             Cos[(-2) $CellContext`t$$], 
             Sin[(-2) $CellContext`t$$]}, 4/9], 
          
          Circle[{-7, 
            0} + {(-4) Cos[-$CellContext`t$$], (-4) Sin[-$CellContext`t$$]} + {
             Cos[(-2) $CellContext`t$$], 
             Sin[(-2) $CellContext`t$$]} + {(-(4/9)) 
             Cos[(-3) $CellContext`t$$], ((-4)/9) Sin[(-3) $CellContext`t$$]},
            0.25], 
          
          Line[{{-7, 
            0}, {-7, 
             0} + {(-4) Cos[$CellContext`t$$], (-4) 
              Sin[$CellContext`t$$]}, {-7, 
             0} + {(-4) Cos[-$CellContext`t$$], (-4) Sin[-$CellContext`t$$]} + {
              Cos[(-2) $CellContext`t$$], 
              Sin[(-2) $CellContext`t$$]}, {-7, 
             0} + {(-4) Cos[-$CellContext`t$$], (-4) Sin[-$CellContext`t$$]} + {
              Cos[(-2) $CellContext`t$$], 
              Sin[(-2) $CellContext`t$$]} + {(-(4/9)) 
              Cos[(-3) $CellContext`t$$], ((-4)/9) 
              Sin[(-3) $CellContext`t$$]}, {-7, 
             0} + {(-4) Cos[-$CellContext`t$$], (-4) Sin[-$CellContext`t$$]} + {
              Cos[(-2) $CellContext`t$$], 
              Sin[(-2) $CellContext`t$$]} + {(-(4/9)) 
              Cos[(-3) $CellContext`t$$], ((-4)/9) 
              Sin[(-3) $CellContext`t$$]} + {
             0.25 Cos[(-4) $CellContext`t$$], 0.25 
              Sin[(-4) $CellContext`t$$]}, {
            0, (-4) Sin[-$CellContext`t$$] + 
             Sin[(-2) $CellContext`t$$] + ((-4)/9) Sin[(-3) $CellContext`t$$] + 
             0.25 Sin[(-4) $CellContext`t$$]}}]}, {
         Axes -> True, PlotRange -> {-10, 10}}], 
        Plot[(-4) Cos[$CellContext`x + $CellContext`t$$] + 
         Cos[2 ($CellContext`x + $CellContext`t$$)] - (4/9) 
         Cos[3 ($CellContext`x + $CellContext`t$$)] + (1/4) 
          Cos[4 ($CellContext`x + $CellContext`t$$)] - (4/25) 
         Cos[5 ($CellContext`x + $CellContext`t$$)], {$CellContext`x, 0, 
          20}]], "Specifications" :> {{$CellContext`t$$, 0, (-2) Pi, 
         AnimationRunning -> False, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{471., {174., 181.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7716145134753823`*^9, {3.771614606930566*^9, 3.7716146347160892`*^9}, 
   3.7716148284300613`*^9, {3.77161488508609*^9, 3.7716148900992775`*^9}, 
   3.7716149244394913`*^9, 3.7716161643130083`*^9, {3.7716169262580976`*^9, 
   3.7716169415195603`*^9}, {3.7716169829680653`*^9, 3.7716170016134863`*^9}, 
   3.7716192956066704`*^9, 3.7716193561763444`*^9, 3.7716193953393345`*^9, 
   3.7716219364581733`*^9, 3.7716243616637154`*^9, {3.7716244972364607`*^9, 
   3.771624513612579*^9}, {3.7716245575857153`*^9, 3.771624590077594*^9}, 
   3.771664603266206*^9, 3.7716669774708633`*^9, 3.7716921678439384`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"6f4c8298-c084-4445-87fd-8b189daa3707"],

Cell[BoxData[
 RowBox[{"test2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{"#1", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Apply", "[", 
     RowBox[{"List", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"(", 
          RowBox[{"x", "+", "t"}], ")"}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"x", "+", "t"}], ")"}]}], "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "-", 
       RowBox[{
        FractionBox["4", "25"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716763279259205`*^9, 3.7716763787878714`*^9}, {
   3.771676494266841*^9, 3.7716765012468505`*^9}, {3.7716766007729144`*^9, 
   3.7716766039490924`*^9}, {3.771677627215974*^9, 3.7716776636508703`*^9}, 
   3.7716921678439384`*^9},ExpressionUUID->"6de262a0-05e9-48e1-b493-\
99569ebc30f9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7716761420172453`*^9, 3.7716763798152485`*^9, {3.7716764965095434`*^9, 
   3.7716765017845087`*^9}, {3.771676604778636*^9, 3.7716766098377247`*^9}, {
   3.771677638025263*^9, 3.7716776454514217`*^9}, 3.7716921678439384`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"381fd918-04a4-4479-84e7-c1a24571efe8"],

Cell[BoxData[
 RowBox[{"?", "ListPlot"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716762286197224`*^9, 3.7716762365111914`*^9}, 
   3.7716921678479395`*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"065855e1-f20d-4231-98dc-75e69b4ffc6e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ListPlot",
              ButtonNote->"paclet:ref/ListPlot"],
             "\"paclet:ref/ListPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots points \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \
\\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a list of \
points with specified \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) coordinates. \\n\\!\\(\\*RowBox[{\
\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots data from all the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\
\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\
\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\"]\\\"}]\\) plots \\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) with features defined by the symbolic \
wrapper \\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ListPlot", 
                    "paclet:ref/ListPlot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ListPlot.html"]\
, None}, "http://reference.wolfram.com/language/ref/ListPlot.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "GoldenRatio"]}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Filling", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FillingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"InterpolationOrder", "\[Rule]", "None"}]},
                    {
                    RowBox[{"IntervalMarkers", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"IntervalMarkersStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Joined", "\[Rule]", "False"}]},
                    {
                    RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"#1", "&"}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "\<\"Overlaid\"\>"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","64","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","64","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ListPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{15., {4., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{15., {4., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ListPlot",
              ButtonNote->"paclet:ref/ListPlot"],
             "\"paclet:ref/ListPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots points \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \
\\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a list of \
points with specified \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) coordinates. \\n\\!\\(\\*RowBox[{\
\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots data from all the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\
\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\
\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\"]\\\"}]\\) plots \\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) with features defined by the symbolic \
wrapper \\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ListPlot\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) plots points \
\!\(\*RowBox[{RowBox[{\"{\", RowBox[{\"1\", \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{\"2\", \",\", SubscriptBox[StyleBox[\"y\", \"TI\
\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}]\). \n\!\(\*RowBox[{\"ListPlot\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) plots \
a list of points with specified \!\(\*StyleBox[\"x\", \"TI\"]\) and \
\!\(\*StyleBox[\"y\", \"TI\"]\) coordinates. \n\!\(\*RowBox[{\"ListPlot\", \
\"[\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"data\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"data\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \"]\"}]\) plots data from all the \!\(\*SubscriptBox[StyleBox[\"data\
\", \"TI\"], StyleBox[\"i\", \"TI\"]]\).\n\!\(\*RowBox[{\"ListPlot\", \"[\", \
RowBox[{\"{\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{StyleBox[\"w\", \"TI\"], \"[\", \
RowBox[{SubscriptBox[StyleBox[\"data\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}], \",\", StyleBox[\"\
\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) plots \
\!\(\*SubscriptBox[StyleBox[\"data\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) \
with features defined by the symbolic wrapper \!\(\*StyleBox[\"w\", \
\"TI\"]\). ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ListPlot", "Web" -> 
      "http://reference.wolfram.com/language/ref/ListPlot.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> GoldenRatio^(-1), Axes -> 
      Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, 
      Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, 
      ClippingStyle -> None, ColorFunction -> Automatic, ColorFunctionScaling -> 
      True, ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions -> Automatic, DataRange -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Filling -> None, 
      FillingStyle -> Automatic, FormatType :> TraditionalForm, Frame -> 
      Automatic, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
      Automatic, FrameTicksStyle -> {}, GridLines -> None, 
      GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, ImageSizeRaw -> Automatic, InterpolationOrder -> 
      None, IntervalMarkers -> Automatic, IntervalMarkersStyle -> Automatic, 
      Joined -> False, LabelingFunction -> Automatic, LabelingSize -> 
      Automatic, LabelStyle -> {}, MaxPlotPoints -> DirectedInfinity[1], Mesh -> 
      None, MeshFunctions -> {#& }, MeshShading -> None, MeshStyle -> 
      Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, 
      PlotLabel -> None, PlotLabels -> None, PlotLayout -> "Overlaid", 
      PlotLegends -> None, PlotMarkers -> None, PlotRange -> Automatic, 
      PlotRangeClipping -> True, PlotRangePadding -> Automatic, PlotRegion -> 
      Automatic, PlotStyle -> Automatic, PlotTheme :> $PlotTheme, 
      PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, 
      ScalingFunctions -> None, TargetUnits -> Automatic, Ticks -> Automatic, 
      TicksStyle -> {}}, "Attributes" -> {Protected, ReadProtected}, 
    "FullName" -> "System`ListPlot"], False]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716762307654777`*^9, 3.771676237085882*^9}, 
   3.7716921678479395`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"b2856d8b-bac0-4728-a059-918b27ee8af1"],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"circleTest", ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716776810904727`*^9, 3.771677695074957*^9}, 
   3.7716921678479395`*^9},
 CellLabel->
  "In[125]:=",ExpressionUUID->"1387034b-19b4-45fb-a8dd-6b2073504b85"],

Cell[BoxData[
 RowBox[{"circleTest", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", "#1"}], "]"}], "&"}], "/@", 
    RowBox[{"Apply", "[", 
     RowBox[{"List", ",", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"(", 
          RowBox[{"x", "+", "t"}], ")"}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"x", "+", "t"}], ")"}]}], "]"}], "+", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        FractionBox["4", "25"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}]}]}], "]"}]}], "/.", 
   RowBox[{
    RowBox[{"x", "+", "t"}], "\[Rule]", "t"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716774704272966`*^9, 3.771677531428028*^9}, 
   3.771677666686077*^9, {3.771677720228648*^9, 3.771677733597295*^9}, 
   3.7716921678479395`*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"a2f2c24d-25a7-4d49-b387-16a4859ced0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", "t", "]"}]}]}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
     RowBox[{
      FractionBox["4", "9"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "t"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
     RowBox[{
      FractionBox["4", "25"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"5", " ", "t"}], "]"}]}]}], "]"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716775063382864`*^9, 3.7716775322598066`*^9}, 
   3.771677667257929*^9, 3.7716777341251593`*^9, 3.771692167851937*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"0d589212-4b27-4208-9014-fdb082619b51"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"test", "=", 
    RowBox[{"Apply", "[", 
     RowBox[{"List", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"(", 
          RowBox[{"x", "+", "t"}], ")"}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"x", "+", "t"}], ")"}]}], "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "-", 
       RowBox[{
        FractionBox["4", "25"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}]}]}], "]"}]}], ";", 
   RowBox[{
    RowBox[{
     RowBox[{"Animate", "[", 
      RowBox[{
       RowBox[{"Plot", "[", " ", 
        RowBox[{"#1", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "2"}], "Pi"}]}], "}"}], ",", 
       RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Apply", "[", 
     RowBox[{"List", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"(", 
          RowBox[{"x", "+", "t"}], ")"}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"x", "+", "t"}], ")"}]}], "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}], "-", 
       RowBox[{
        FractionBox["4", "25"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}], "]"}]}]}]}], 
     "]"}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771676089007543*^9, 3.771676156861735*^9}, {
   3.771676212571881*^9, 3.7716762451352606`*^9}, {3.7716763526917686`*^9, 
   3.771676356683486*^9}, {3.771676400738287*^9, 3.771676409166503*^9}, {
   3.7716764415459533`*^9, 3.7716764696489024`*^9}, {3.771676510643441*^9, 
   3.7716765125053763`*^9}, {3.77167661278104*^9, 3.771676616084153*^9}, {
   3.7716775344272547`*^9, 3.771677603513917*^9}, 3.7716776528135605`*^9, 
   3.771692167851937*^9},ExpressionUUID->"6e12ef6d-0ff4-4d9a-ba66-\
9c30d2da837a"]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "fourierGraphics", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"fourierGraphics", "[", 
   RowBox[{"function_", ",", "variable_", ",", "numberOfCircles_"}], "]"}], ":=",
   "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"rawFouier", " ", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"List", ",", 
         RowBox[{"FourierCoefficient", "[", 
          RowBox[{"function", ",", "variable", ",", "numberOfCircles"}], 
          "]"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"radii", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FourierCosCoefficient", "[", 
          RowBox[{"function", ",", "variable", ",", "p"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "numberOfCircles"}], "}"}]}], "]"}]}], 
      ",", "\n", "\t", "rawprotocoordinate", ",", "circleList", ",", 
      "coordinateList", ",", "lineList", ",", "lastCoordinate", ",", 
      "plotCoordinate", ",", "range"}], "\n", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"rawprotocoordinate", "=", 
      RowBox[{"Echo", "@", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Times", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"List", ",", "radii"}], "]"}], ",", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"Range", "[", "numberOfCircles", "]"}], "*", "x"}], 
            "]"}]}], "}"}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"coordinateList", "=", 
      RowBox[{"Echo", "@", 
       RowBox[{"(", 
        RowBox[{"MapThread", "[", 
         RowBox[{"List", ",", 
          RowBox[{"{", 
           RowBox[{"rawprotocoordinate", ",", 
            RowBox[{"rawprotocoordinate", "/.", 
             RowBox[{"Cos", "\[Rule]", "Sin"}]}]}], "}"}]}], "]"}], ")"}]}]}],
      ";", "\n", 
     RowBox[{"circleList", "=", 
      RowBox[{"Echo", "@", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Circle", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{"coordinateList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Total", "[", "radii", "]"}], "+", "2"}], ",", 
                 "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", 
           RowBox[{"Abs", "@", "radii"}]}], "}"}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"lineList", "=", 
      RowBox[{"Echo", "@", 
       RowBox[{"Line", "[", 
        RowBox[{
         RowBox[{"Plus", "@@@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"coordinateList", "[", 
             RowBox[{"[", 
              RowBox[{";;", "n"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Length", "[", "coordinateList", "]"}]}], "}"}]}], 
           "]"}]}], "//", 
         RowBox[{"Prepend", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"lastCoordinate", "=", 
      RowBox[{"Echo", "@", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"lineList", ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "}"}]}]}], ";", "\n", 
     RowBox[{"plotCoordinate", "=", 
      RowBox[{"Echo", "@", 
       RowBox[{"Total", "[", 
        RowBox[{"rawprotocoordinate", "/.", 
         RowBox[{"x", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"x", "+", "t"}], ")"}]}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"range", "=", 
      RowBox[{"Echo", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Total", "[", 
           RowBox[{"Abs", "@", "radii"}], "]"}]}], ",", 
         RowBox[{"Total", "[", 
          RowBox[{"Abs", "@", "radii"}], "]"}]}], "}"}]}]}], ";", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"radii", "//", "Length"}], "]"}], ";", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Animate", "[", "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{"Graphics", "[", "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2", ",", "lastCoordinate"}], "}"}], ",", 
             "\[IndentingNewLine]", "\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Axes", "\[Rule]", "True"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "}"}]}], "]"}],
            ",", "\n", "\t\t\t", 
           RowBox[{"Plot", "[", 
            RowBox[{"plotCoordinate", ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "\t", "\n", "\t", "]"}], ",", "\n", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{
            RowBox[{"-", "2"}], "*", "Pi"}]}], "}"}], ",", 
         RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}], "&"}], 
      "@", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"(", "circleList", ")"}], ",", 
        RowBox[{"(", "lineList", ")"}]}], "]"}]}]}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.7716196529047813`*^9, 3.771619708828864*^9}, {
   3.771619789043375*^9, 3.7716197993917866`*^9}, {3.7716198443542833`*^9, 
   3.7716198484037037`*^9}, {3.771619979713068*^9, 3.771620007961116*^9}, {
   3.7716205196575623`*^9, 3.771620521305644*^9}, {3.7716227744108195`*^9, 
   3.7716227769092474`*^9}, {3.771624330369584*^9, 3.771624345921792*^9}, {
   3.7716246431607246`*^9, 3.771624734988364*^9}, {3.77162484491329*^9, 
   3.7716249431658792`*^9}, 3.7716249823073125`*^9, {3.7716250200292683`*^9, 
   3.771625155332671*^9}, {3.7716252095268183`*^9, 3.7716252129907417`*^9}, {
   3.7716252485946198`*^9, 3.7716253206761613`*^9}, {3.7716253540298567`*^9, 
   3.7716253930033827`*^9}, {3.77166463457656*^9, 3.771664650762432*^9}, {
   3.771664737833004*^9, 3.771664777220931*^9}, {3.7716648441382184`*^9, 
   3.77166512821519*^9}, {3.7716652007883396`*^9, 3.771665230989393*^9}, {
   3.7716653213269544`*^9, 3.7716654493962955`*^9}, {3.7716668574158354`*^9, 
   3.7716669327711687`*^9}, {3.771667009219571*^9, 3.771667087671982*^9}, {
   3.7716671243500214`*^9, 3.7716671298272324`*^9}, {3.771667324113043*^9, 
   3.771667358778993*^9}, {3.7716693656884995`*^9, 3.7716693846385884`*^9}, {
   3.7716694380754304`*^9, 3.7716694408733683`*^9}, 3.7716734566811714`*^9, {
   3.77167349172274*^9, 3.7716734929877853`*^9}, 3.7716856839813275`*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"0a5a20a8-3454-4fe5-81a9-ed7d7315aced"],

Cell[BoxData[
 RowBox[{"Line", "[", 
  RowBox[{"{", "\n", "\t\t\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", "\n", "\t\t\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "4"}], 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], ",", "\n", "\t\t\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"-", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "4"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "t"}], "]"}]}]}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "t"}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}]}], ",", "\n", "\t\t\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"-", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "4"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "t"}], "]"}]}]}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "t"}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"4", "/", "9"}], ")"}]}], 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"-", "3"}], "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "/", "9"}], ")"}], 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"-", "3"}], "t"}], "]"}]}]}], "}"}]}], ",", "\n", 
    "\t\t\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"-", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "4"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "t"}], "]"}]}]}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "t"}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"4", "/", "9"}], ")"}]}], 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"-", "3"}], "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "/", "9"}], ")"}], 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"-", "3"}], "t"}], "]"}]}]}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.25", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"-", "4"}], "t"}], "]"}]}], ",", 
       RowBox[{"0.25", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"-", "4"}], "t"}], "]"}]}]}], "}"}]}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771677975413433*^9, 3.771677983127507*^9}, 
   3.7716828606219225`*^9},ExpressionUUID->"d361b6f1-5e13-41e5-85ac-\
aa57086317fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "unblendedCircleSmoothie", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"unblendedCircleSmoothie", "[", 
   RowBox[{"function_", ",", "variable_Symbol", ",", "numCir_Integer"}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"fourierCoeff", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FourierCosCoefficient", "[", 
          RowBox[{"function", ",", "variable", ",", "p"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "numCir"}], "}"}]}], "]"}]}], ",", "\n",
       "\t\t\t", 
      RowBox[{"color", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Hue", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"(", 
             RowBox[{"1", "/", "numCir"}], ")"}]}], "]"}]}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ",", "\n", "\t\t\t", "circleList", 
      ",", "basicCoord", ",", "manipulatedCoord", ",", "maxRadius", ",", 
      "lineList", ",", "plotList", ",", "styledLines", ",", "prePlot"}], "\n",
      "\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"circleList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "maxRadius"}], ",", "0"}], "}"}], ",", "#1"}], "]"}],
         "&"}], "/@", 
       RowBox[{"Abs", "@", "fourierCoeff"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"basicCoord", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Times", ",", 
        RowBox[{"{", 
         RowBox[{"fourierCoeff", ",", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"Range", "[", "numCir", "]"}], "*", "variable"}], "]"}]}],
          "}"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"manipulatedCoord", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"basicCoord", "-", "maxRadius"}], ",", 
         RowBox[{"basicCoord", "/.", 
          RowBox[{"Cos", "\[Rule]", "Sin"}]}]}], "}"}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"maxRadius", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "@", "fourierCoeff"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"lineList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "maxRadius"}], ",", "0"}], "}"}], ",", "#1", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"#1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], "&"}],
         "/@", "manipulatedCoord"}], "/.", 
       RowBox[{"variable", "\[Rule]", "$time"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"styledLines", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Style", ",", 
        RowBox[{"{", 
         RowBox[{"lineList", ",", "color"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t\t", "\n", "\t\t", 
     RowBox[{"prePlot", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"basicCoord", ",", "color"}], "}"}], "]"}], ")"}], "/.", 
       RowBox[{"variable", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"variable", "+", "$time"}], ")"}]}]}]}], ";", "\n", "\t\t", 
     RowBox[{"plotList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "#2"}]}], "]"}], "&"}], "@@@", 
        RowBox[{"(", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"basicCoord", ",", "color"}], "}"}], "]"}], ")"}]}], "/.", 
       RowBox[{"variable", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"variable", "+", "$time"}], ")"}]}]}]}], ";", "\n", "\n", 
     "\t\t", 
     RowBox[{"Print", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<circleList\>\"", ",", "circleList", ",", " ", 
        "\"\<styledlines\>\"", ",", " ", "styledLines", ",", " ", 
        "\"\<plotList\>\"", ",", " ", "plotList"}], "}"}], "]"}], ";", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Animate", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Show", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sequence", "@@", "#1"}], ",", 
               RowBox[{"Sequence", "@@", "#2"}]}], "}"}], ",", 
             RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], ",", "\n", 
           "\t\t\t\t", "#3", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\n", "\t\t\t\t", "]"}],
          ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"$time", ",", "0", ",", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi"}]}], "}"}], ",", 
         RowBox[{"AnimationRunning", "\[Rule]", "True"}]}], "]"}], "&"}], "@@", 
      RowBox[{"{", 
       RowBox[{"circleList", ",", "styledLines", ",", "plotList"}], 
       "}"}]}]}]}], "\n", "\t", "\n", "\t", "\n", "\t", "]"}]}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.7716850570991344`*^9, 3.7716854156864033`*^9}, {
   3.7716855533261623`*^9, 3.77168555965027*^9}, {3.771685904428282*^9, 
   3.771685934519478*^9}, {3.771685970639233*^9, 3.7716859751694183`*^9}, {
   3.77168615200399*^9, 3.7716861890074234`*^9}, {3.7716863551780457`*^9, 
   3.771686387687787*^9}, {3.771686448768833*^9, 3.771686497559126*^9}, {
   3.771686563187261*^9, 3.771686581696333*^9}, {3.771686772162056*^9, 
   3.771686876523115*^9}, {3.771686960550361*^9, 3.771686985267902*^9}, {
   3.7716870345700665`*^9, 3.77168708644653*^9}, {3.7716871166780496`*^9, 
   3.7716872062263236`*^9}, {3.7716895359027767`*^9, 3.771689594507044*^9}, {
   3.7716896553676243`*^9, 3.7716896746383505`*^9}, {3.771689732997058*^9, 
   3.771689765315765*^9}, {3.7716898453515577`*^9, 3.7716899674327126`*^9}, 
   3.77169005311174*^9, {3.771690121480014*^9, 3.7716901314688764`*^9}, {
   3.7716901800143776`*^9, 3.771690206552782*^9}, {3.771690310192673*^9, 
   3.771690476357931*^9}, {3.7716905208203726`*^9, 3.7716905703268185`*^9}, {
   3.7716907403020773`*^9, 3.7716908063186026`*^9}, {3.7716909694623756`*^9, 
   3.7716910183077984`*^9}, {3.7716910882965384`*^9, 3.771691124360132*^9}, {
   3.7716911769379873`*^9, 3.7716912301252337`*^9}, {3.7716912918575954`*^9, 
   3.7716913212546782`*^9}, {3.771691374851796*^9, 3.771691397596439*^9}, {
   3.771691533325325*^9, 3.7716915453215027`*^9}, {3.7716918896435547`*^9, 
   3.7716919094279537`*^9}, {3.771692388884797*^9, 3.7716924363237634`*^9}, {
   3.7716925227530947`*^9, 3.7716926338587866`*^9}, {3.7716926888633857`*^9, 
   3.7716927793883047`*^9}, {3.7716930347539787`*^9, 3.771693089776588*^9}, 
   3.771693165487168*^9, 3.7716932725807133`*^9, {3.771693330667783*^9, 
   3.7716934429291525`*^9}},
 CellLabel->
  "In[384]:=",ExpressionUUID->"c5eab919-bb5f-447d-9376-ac4da98e6856"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Manipulate", "]"}]], "Input",
 CellChangeTimes->{{3.7716926556385527`*^9, 3.7716926599720135`*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"ab01e732-7019-4b0e-83ec-201f4e300b63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldAll", ",", "Protected", ",", "ReadProtected"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771692660347906*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"288efa49-6003-4485-92bd-84726e34e0d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unblendedCircleSmoothie", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "x", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7716895061542416`*^9, 3.77168951739542*^9}, {
  3.7716901513320913`*^9, 3.7716901523684196`*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"d76471fc-8b14-45ea-bb86-1240b5754367"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\) is neither a list \
of replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,383,202,29655075990904159102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7716934132692676`*^9},
 CellLabel->
  "During evaluation of \
In[383]:=",ExpressionUUID->"3744bb4c-cf3f-4c44-acc6-1fbace1d1457"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\) is neither a list \
of replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,383,203,29655075990904159102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771693413333089*^9},
 CellLabel->
  "During evaluation of \
In[383]:=",ExpressionUUID->"fde8f2c8-9f18-4086-9523-9ac0a01b3a40"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"ReplaceAll\\\"}]\\) in \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{GraphicsBox[List[List[List[List[], List[], TagBox[List[Skeleton[2]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$1277642#1\\\"]]]]], \
List[]], List[Rule[DisplayFunction, Identity], Rule[Ticks, List[Automatic, \
Automatic]], Rule[AxesOrigin, List[0, 0]], Rule[FrameTicks, \
List[List[Automatic, Charting`ScaledFrameTicks[Skeleton[1]]], List[Automatic, \
Charting`ScaledFrameTicks[Skeleton[1]]]]], Rule[GridLines, List[None, None]], \
Rule[DisplayFunction, Identity], Rule[PlotRangePadding, \
List[List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]], \
List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], Rule[PlotRangeClipping, \
True], Rule[ImagePadding, All], Rule[DisplayFunction, Identity], \
Rule[AspectRatio, NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], \
Rule[Axes, List[True, True]], Rule[AxesLabel, List[None, None]], \
Rule[AxesOrigin, List[0, 0]], RuleDelayed[DisplayFunction, Identity], \
Rule[Frame, List[List[False, False], List[False, False]]], Rule[FrameLabel, \
List[List[None, None], List[None, None]]], Rule[FrameTicks, \
List[List[Automatic, Automatic], List[Automatic, Automatic]]], \
Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Skeleton[3]]], \
Rule[\\\"DefaultMeshStyle\\\", AbsolutePointSize[Skeleton[1]]], \
Rule[\\\"ScalingFunctions\\\", None], Rule[\\\"CoordinatesToolOptions\\\", \
List[Skeleton[2]]]]], Rule[PlotRange, List[List[0, 10], \
List[-3.9999999999999165`, 3.9999991867182927`]]], Rule[PlotRangeClipping, \
True], Rule[PlotRangePadding, List[List[Scaled[Skeleton[1]], \
Scaled[Skeleton[1]]], List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], \
Rule[Ticks, List[Automatic, Automatic]]]], \\\",\\\", \
GraphicsBox[List[List[List[List[], List[], TagBox[List[Skeleton[2]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$1277689#1\\\"]]]]], \
List[]], List[Rule[DisplayFunction, Identity], Rule[Ticks, List[Automatic, \
Automatic]], Rule[AxesOrigin, List[0, 0]], Rule[FrameTicks, \
List[List[Automatic, Charting`ScaledFrameTicks[Skeleton[1]]], List[Automatic, \
Charting`ScaledFrameTicks[Skeleton[1]]]]], Rule[GridLines, List[None, None]], \
Rule[DisplayFunction, Identity], Rule[PlotRangePadding, \
List[List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]], \
List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], Rule[PlotRangeClipping, \
True], Rule[ImagePadding, All], Rule[DisplayFunction, Identity], \
Rule[AspectRatio, NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], \
Rule[Axes, List[True, True]], Rule[AxesLabel, List[None, None]], \
Rule[AxesOrigin, List[0, 0]], RuleDelayed[DisplayFunction, Identity], \
Rule[Frame, List[List[False, False], List[False, False]]], Rule[FrameLabel, \
List[List[None, None], List[None, None]]], Rule[FrameTicks, \
List[List[Automatic, Automatic], List[Automatic, Automatic]]], \
Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Skeleton[3]]], \
Rule[\\\"DefaultMeshStyle\\\", AbsolutePointSize[Skeleton[1]]], \
Rule[\\\"ScalingFunctions\\\", None], Rule[\\\"CoordinatesToolOptions\\\", \
List[Skeleton[2]]]]], Rule[PlotRange, List[List[0, 10], \
List[-0.9999983022923676`, 0.9999999999999167`]]], Rule[PlotRangeClipping, \
True], Rule[PlotRangePadding, List[List[Scaled[Skeleton[1]], \
Scaled[Skeleton[1]]], List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], \
Rule[Ticks, List[Automatic, Automatic]]]], \\\",\\\", \
GraphicsBox[List[List[List[List[], List[], TagBox[List[Skeleton[2]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$1277736#1\\\"]]]]], \
List[]], List[Rule[DisplayFunction, Identity], Rule[Ticks, List[Automatic, \
Automatic]], Rule[AxesOrigin, List[0, 0]], Rule[FrameTicks, \
List[List[Automatic, Charting`ScaledFrameTicks[Skeleton[1]]], List[Automatic, \
Charting`ScaledFrameTicks[Skeleton[1]]]]], Rule[GridLines, List[None, None]], \
Rule[DisplayFunction, Identity], Rule[PlotRangePadding, \
List[List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]], \
List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], Rule[PlotRangeClipping, \
True], Rule[ImagePadding, All], Rule[DisplayFunction, Identity], \
Rule[AspectRatio, NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], \
Rule[Axes, List[True, True]], Rule[AxesLabel, List[None, None]], \
Rule[AxesOrigin, List[0, 0]], RuleDelayed[DisplayFunction, Identity], \
Rule[Frame, List[List[False, False], List[False, False]]], Rule[FrameLabel, \
List[List[None, None], List[None, None]]], Rule[FrameTicks, \
List[List[Automatic, Automatic], List[Automatic, Automatic]]], \
Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Skeleton[3]]], \
Rule[\\\"DefaultMeshStyle\\\", AbsolutePointSize[Skeleton[1]]], \
Rule[\\\"ScalingFunctions\\\", None], Rule[\\\"CoordinatesToolOptions\\\", \
List[Skeleton[2]]]]], Rule[PlotRange, List[List[0, 10], \
List[-0.44444444444436115`, 0.44444376697522614`]]], Rule[PlotRangeClipping, \
True], Rule[PlotRangePadding, List[List[Scaled[Skeleton[1]], \
Scaled[Skeleton[1]]], List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], \
Rule[Ticks, List[Automatic, Automatic]]]], \\\",\\\", \
GraphicsBox[List[List[List[List[], List[], TagBox[List[Skeleton[2]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$1277783#1\\\"]]]]], \
List[]], List[Rule[DisplayFunction, Identity], Rule[Ticks, List[Automatic, \
Automatic]], Rule[AxesOrigin, List[0, 0]], Rule[FrameTicks, \
List[List[Automatic, Charting`ScaledFrameTicks[Skeleton[1]]], List[Automatic, \
Charting`ScaledFrameTicks[Skeleton[1]]]]], Rule[GridLines, List[None, None]], \
Rule[DisplayFunction, Identity], Rule[PlotRangePadding, \
List[List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]], \
List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], Rule[PlotRangeClipping, \
True], Rule[ImagePadding, All], Rule[DisplayFunction, Identity], \
Rule[AspectRatio, NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], \
Rule[Axes, List[True, True]], Rule[AxesLabel, List[None, None]], \
Rule[AxesOrigin, List[0, 0]], RuleDelayed[DisplayFunction, Identity], \
Rule[Frame, List[List[False, False], List[False, False]]], Rule[FrameLabel, \
List[List[None, None], List[None, None]]], Rule[FrameTicks, \
List[List[Automatic, Automatic], List[Automatic, Automatic]]], \
Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Skeleton[3]]], \
Rule[\\\"DefaultMeshStyle\\\", AbsolutePointSize[Skeleton[1]]], \
Rule[\\\"ScalingFunctions\\\", None], Rule[\\\"CoordinatesToolOptions\\\", \
List[Skeleton[2]]]]], Rule[PlotRange, List[List[0, 10], \
List[-0.24999994176165366`, 0.2499999999999167`]]], Rule[PlotRangeClipping, \
True], Rule[PlotRangePadding, List[List[Scaled[Skeleton[1]], \
Scaled[Skeleton[1]]], List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], \
Rule[Ticks, List[Automatic, Automatic]]]], \\\",\\\", \
GraphicsBox[List[List[List[List[], List[], TagBox[List[Skeleton[2]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$1277830#1\\\"]]]]], \
List[]], List[Rule[DisplayFunction, Identity], Rule[Ticks, List[Automatic, \
Automatic]], Rule[AxesOrigin, List[0, 0]], Rule[FrameTicks, \
List[List[Automatic, Charting`ScaledFrameTicks[Skeleton[1]]], List[Automatic, \
Charting`ScaledFrameTicks[Skeleton[1]]]]], Rule[GridLines, List[None, None]], \
Rule[DisplayFunction, Identity], Rule[PlotRangePadding, \
List[List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]], \
List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], Rule[PlotRangeClipping, \
True], Rule[ImagePadding, All], Rule[DisplayFunction, Identity], \
Rule[AspectRatio, NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], \
Rule[Axes, List[True, True]], Rule[AxesLabel, List[None, None]], \
Rule[AxesOrigin, List[0, 0]], RuleDelayed[DisplayFunction, Identity], \
Rule[Frame, List[List[False, False], List[False, False]]], Rule[FrameLabel, \
List[List[None, None], List[None, None]]], Rule[FrameTicks, \
List[List[Automatic, Automatic], List[Automatic, Automatic]]], \
Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Skeleton[3]]], \
Rule[\\\"DefaultMeshStyle\\\", AbsolutePointSize[Skeleton[1]]], \
Rule[\\\"ScalingFunctions\\\", None], Rule[\\\"CoordinatesToolOptions\\\", \
List[Skeleton[2]]]]], Rule[PlotRange, List[List[0, 10], \
List[-0.1599999999999167`, 0.1599999969945352`]]], Rule[PlotRangeClipping, \
True], Rule[PlotRangePadding, List[List[Scaled[Skeleton[1]], \
Scaled[Skeleton[1]]], List[Scaled[Skeleton[1]], Scaled[Skeleton[1]]]]], \
Rule[Ticks, List[Automatic, Automatic]]]]}], \\\"}\\\"}], \\\"/.\\\", \\\"\
\[VeryThinSpace]\\\", \\\"x\\\"}]\\) is Protected.\"",2,383,204,
   29655075990904159102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7716934135810213`*^9},
 CellLabel->
  "During evaluation of \
In[383]:=",ExpressionUUID->"ad16e3f0-c7a9-45fa-8f52-5a4588ce1164"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\) is neither a list \
of replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,383,205,29655075990904159102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7716934136410036`*^9},
 CellLabel->
  "During evaluation of \
In[383]:=",ExpressionUUID->"d0ead50a-8167-4665-9dbd-041a30b8ad0a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,383,206,29655075990904159102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7716934137089834`*^9},
 CellLabel->
  "During evaluation of \
In[383]:=",ExpressionUUID->"4542383e-dfa0-42ef-88a6-d26721a01c56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"circleList\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", "4"}], "]"}], ",", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
       FractionBox["4", "9"]}], "]"}], ",", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
       FractionBox["1", "4"]}], "]"}], ",", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
       FractionBox["4", "25"]}], "]"}]}], "}"}], ",", "\<\"styledlines\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox[
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "-", 
            RowBox[{"4", " ", 
             RowBox[{"Cos", "[", "$time", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            RowBox[{"Sin", "[", "$time", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            RowBox[{"Sin", "[", "$time", "]"}]}]}], "}"}]}], "}"}], "]"}],
      StripOnInput->False,
      LineColor->Hue[0],
      FrontFaceColor->Hue[0],
      BackFaceColor->Hue[0],
      GraphicsColor->Hue[0],
      FontColor->Hue[0]], ",", 
     StyleBox[
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "$time"}], "]"}]}], ",", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "$time"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "$time"}], "]"}]}], "}"}]}], "}"}], "]"}],
      StripOnInput->False,
      LineColor->Hue[
        Rational[1, 5]],
      FrontFaceColor->Hue[
        Rational[1, 5]],
      BackFaceColor->Hue[
        Rational[1, 5]],
      GraphicsColor->Hue[
        Rational[1, 5]],
      FontColor->Hue[
        Rational[1, 5]]], ",", 
     StyleBox[
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "-", 
            RowBox[{
             FractionBox["4", "9"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "$time"}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["4", "9"]}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", " ", "$time"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["4", "9"]}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", " ", "$time"}], "]"}]}]}], "}"}]}], "}"}], "]"}],
      StripOnInput->False,
      LineColor->Hue[
        Rational[2, 5]],
      FrontFaceColor->Hue[
        Rational[2, 5]],
      BackFaceColor->Hue[
        Rational[2, 5]],
      GraphicsColor->Hue[
        Rational[2, 5]],
      FontColor->Hue[
        Rational[2, 5]]], ",", 
     StyleBox[
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"4", " ", "$time"}], "]"}]}]}], ",", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"4", " ", "$time"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"4", " ", "$time"}], "]"}]}]}], "}"}]}], "}"}], "]"}],
      StripOnInput->False,
      LineColor->Hue[
        Rational[3, 5]],
      FrontFaceColor->Hue[
        Rational[3, 5]],
      BackFaceColor->Hue[
        Rational[3, 5]],
      GraphicsColor->Hue[
        Rational[3, 5]],
      FontColor->Hue[
        Rational[3, 5]]], ",", 
     StyleBox[
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "-", 
            RowBox[{
             FractionBox["4", "25"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"5", " ", "$time"}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["4", "25"]}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"5", " ", "$time"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["4", "25"]}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"5", " ", "$time"}], "]"}]}]}], "}"}]}], "}"}], "]"}],
      StripOnInput->False,
      LineColor->Hue[
        Rational[4, 5]],
      FrontFaceColor->Hue[
        Rational[4, 5]],
      BackFaceColor->Hue[
        Rational[4, 5]],
      GraphicsColor->Hue[
        Rational[4, 5]],
      FontColor->Hue[
        Rational[4, 5]]]}], "}"}], ",", "\<\"plotList\"\>", ",", 
   RowBox[{"$time", "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        GraphicsBox[{{{}, {}, 
           TagBox[
            {Hue[0, 1, 1], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[CompressedData["
1:eJwVmXk8VN8bx+1mP5JlBmFmhKRVKlL3IVKiVEi2QkhFviRCpbQoa6goUdIi
0oKilIO0WiNkya4sZd/J7/7mj5nX+3XvPfc5n8/zPOeeO1ynY7tdhAQEBNzJ
r///3j7tJLbqYNgmw/n/fxB+X61sulfZnTg3ns4bJ3n+w7sQZeWTROqcY1g9
yayYl89o9eeIwN1rdB+SfBtHKIkqXyYabPVXOJGsOXAwct4tiriclnWYSnIz
K+nfbF0MsWS0sD/xH8IqD6hrp2euEaxFT3MUSD660ddjQimBUFj+pSR0DuGs
mtbU0c2JROw+z0VtswhPHzFtGnJLJuqnhN4uJvmOYNPlCaO7hNbVmVSrGYQN
y64uHq9LIa58rvvuM43w73jjwlH3VGLhcb75qSmEww/O2Y3M3CdmQ09I+Uwi
XD1zKG5QKY3Qj604xR9H+MRHxZUDzx8TzusNVH6OIiwXW/P1z+YMIuLBNdkL
Iwg7aYBwn9tTQr124+8bgwgLzQRUjAY9I6Y9DnwUHkC4ptVy0ajRcyIoYH7c
9g/C/hn0vOG6F4S5Us32qh6ETWK6xYbvZBG1Ket9/v5CWMG/0GLIPZuQ9/Ib
mOhCGG/2GxyYySGCeG59FW0Iize2q/1RyiPGVful4+oRrsdvfft/5xE/d6dT
pGoRfvwgvrjv+Wti0YYttsHVCO/w3rG/d3M+UT7rq6pYjvB16uvrv9wKiJiA
Vec9ixDO9jPx9mFj4pbY39RdBQgn9q7jjARhQl8wUoubj7BnpaTbsFEh8TjE
MeVCDsKSiZ+EhuqKiIs3bAQOPkR4hvUyzUuvmOgea/v8+B7CnWfvmQ/eKSZs
w6wlfyYj/NLtdNKA+3viXc+pJbR4hG201uj+nSkhLITX5PhfQvjul+T/+pQ+
EwZdMxHPnRAejc/RaAn/TPzIW2doZY/wFrevHd+mPhN3lan6nXsR7heesHxd
/YXwYxkp5psivH7jDt3Ll0qJDur9H7baCFc+nRVSG6ggeDfGFu0XIuMlqA7M
5ZXEhlttujdnWHiDapzupYOVhN7L1V3vRlk4cjRtJKCqksi6MjL2vpuF11z9
7uKUXkU4mVNuvP/Mwme+aJqs2l9NdMQ6XrgexsKPnr9STb9WTcRqaQ8eDWHh
b/EGwotLqwm72TPEskAWVnGzzmfr1BDu7d73jhxm4S/C55cLLPxOfBeQ0mw1
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
+02P
              "]]},
            Annotation[#, "Charting`Private`Tag$1277397#1"]& ]}, {}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->All,
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{0, 10}, {-3.9999999999999165`, 3.9999991867182927`}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], ",", 
        GraphicsBox[{{{}, {}, 
           TagBox[
            {Hue[
              NCache[
               Rational[1, 5], 0.2], 1, 1], AbsoluteThickness[1.6], Opacity[
             1.], LineBox[CompressedData["
1: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
bLh3Ka9iM/ofQW8BLQ==
              "]]},
            Annotation[#, "Charting`Private`Tag$1277444#1"]& ]}, {}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->All,
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{0, 10}, {-0.9999983022923676, 0.9999999999999167}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], ",", 
        GraphicsBox[{{{}, {}, 
           TagBox[
            {Hue[
              NCache[
               Rational[2, 5], 0.4], 1, 1], AbsoluteThickness[1.6], Opacity[
             1.], LineBox[CompressedData["
1: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
vOs=
              "]]},
            Annotation[#, "Charting`Private`Tag$1277491#1"]& ]}, {}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->All,
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{0, 10}, {-0.44444444444436115`, 0.44444376697522614`}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], ",", 
        GraphicsBox[{{{}, {}, 
           TagBox[
            {Hue[
              NCache[
               Rational[3, 5], 0.6], 1, 1], AbsoluteThickness[1.6], Opacity[
             1.], LineBox[CompressedData["
1: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
26oVvKsC/wfUDSdp
              "]]},
            Annotation[#, "Charting`Private`Tag$1277538#1"]& ]}, {}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->All,
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{0, 10}, {-0.24999994176165366`, 0.2499999999999167}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], ",", 
        GraphicsBox[{{{}, {}, 
           TagBox[
            {Hue[
              NCache[
               Rational[4, 5], 0.8], 1, 1], AbsoluteThickness[1.6], Opacity[
             1.], LineBox[CompressedData["
1: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
QcBBk2StOiURXlJhslL3PwKqbxvLFKwSYbNHVJrbDALKU2PcbAxYnnz9e/Il
KQIWVJgcwWYifO5bs/sDaQI2HZ9/6ssOEb49cbtpSJYAL1Ofb/W7RfiJVIQu
PY8ARe9bql4sv/YSu7MsFhLwQvBL8JTlW8ll2jOCuQRULgw3/+4jwuoGMj53
SAK2JXqE1B1l17fqefWGR0Dy2dqFjiw/H9rLGMxQJmCtddZgIcvX546k39JW
I6Ctbc4wZuM74X4y+5cSMPBEjYhmr+/V23U6fBkBexVaptIsb6sPGw1lryTA
/WZARwjL2wfz1F2EWgSUHFz5OddThHOd5V580CHgxsuL9hlurF8LJoz/6RGw
82jKFTsnEVZ93lnGBQJsTuTTH2xF2O1MvbLeegJ2rb7qvJw9b9xExck7NxCQ
aJc+tMVIhLt+pk4/tomAz3ZEoJa2CCvnnz5+yYyAyMj+wm9qIrzP1f1bqTkB
aUvm7fbkiPB1jpVDixUBRWeeOmFJEf7SrNMwaE3AobqAG+/HGbw4mtKXsSPA
++nZZc+6GXxt7Ifi1t0EyCp1uikJGfypsC3ukDMB+amTfM/fZjDPjT8p2pX1
227u0fpEBme9jO2sO0jAvKvpHx6x57mOGP/tXzwJiI/qXnbelMGk8e4HEj4E
HDEq2rxUk8GZxRo3DAJYvbyzPpNHhPidu/z8PYEE5EUUDq59KcQE/ffMyZME
VFWbLbYpE+L0uAb3qjB2/95PjXV9hTjV45DG6ngCzsTsSO19z/L4ou2Z2xLY
fPMTHA5VCPCC9rXSPpcIsC63efQuVoCTTWcO5mewn/cx23LWCnCicm6pSi4B
TpYZR8Qi+bjlXbzSxjus3g4nZwcbPpZLOnbJtZCtL+/LD6zE8rrEpmNZZQQ8
e20oty0c47iOr3ochgBx+8o5Ze/u42fJT+/o1hIwHjWnI9b7Pp5tUU7YPSJg
/usE3Vyx+/h8TYRY0lMC7u5YoVelUI3PpS0WzW4n4KtybNss/Uocab13s/gI
AVsGqlOf6pThLPN2B9dRAjokg2qib5Ti6k3WnnXjBHCG7K6JZEvx4LqN8dGT
FcFk3F/h5ddi7KC0pFVWWhE8xt7JZgbfxSt+DTovWqIILos4R6/03cTvkk8f
N3ZShMLoirg2nxN47MJ49A0XRQg7t1hi21UfLBdzJGO6myIUFWStnaS7G28K
2cdv8FSEJtvxG5KFB1HJAdOpO4IUwfZys6As6hw6qzvnwr5LijBHtAA7NF9F
q9uv3opsUISKyL+JspLFSFrDbbTgmSLMKPE0Tk8tRr3BGhvbmhXhi25t4pBy
CbrGq/qk8loRBu0vPPimX4rkDrYoPv6iCFYnV++V31WOflSneg52K4LmpLfp
yh3l6Mksp/sLvyvCMrVbb0V7K1BY0fedB4cUYWO5vyDU5R76HSS+eaoYCZ6l
Sdt1t1Whrpx9PqmTSBD0CT2bHlehl42PUjTESZjbL51xD6pRERnXtWMqCQ5L
Ii/bKt9H7iJOxA1JEn4/SBCf974G2X4PvrN2Fgmbzve0uphgtEG+s+XpbBIm
HVvqVF+AEe12izc6h4QS7y6hix4fvZqpJTBZQELiymdF3mN8VLsqpat9IQnr
Oqi7i5UEqGTXxOzDHBLkLg/FPLUUoLgCoWOKIgnLS7utfuUI0Mm2xRFLKRI2
f1HleDcK0KFJUXcENAmjlw5HNI8IkMk284nuxSRMdvlSYWEgRFpBRbyTyiRY
K2p0u7oK0aKcuZvnqJKgrPb7rMMZIRL79SZFV50EmzSNos+Phagi1W1N9AoS
fjZPt1lmyKDrTL2j4ioS/AWU84JdDEro1YgoXk1Cxw/TJy1HGeStP9LyRpsE
0/WD56qvM8hxv+2Ely4J455rxj5XM8gsroonoUdCn/WmH29Y3lf5GOKjjkgI
l0n0VxllkPzMzyl8IOHALp3ioP+/n11lIthuyPp/JftZ8gIRGnTI6+paT0KB
7ceWQBUR+hA+S/qEMQmnl8i0LdISocb8w2tkNpJA/t035aKhCFW3tjjmmJDw
X49h2oMtIpQrph2hY0pCs4T2tyobEUpWTbvTsJkE7T/zdvrtEaHhoQ05oVtI
KHeK2BDqJkLmNYPpOuYkGNgf7FDwYu8/czmh34KE4tlEkf4REZq6zfRcjhUJ
jqvydn7zFyFn7s9Q++0knBS9uUSxPF/z9WqgzA4Sehp1DDrYeGHRFt86GxKI
nbKb1NjYL2jM/YQdCQ8dA6sn2PufbchxXmlPQnKbCWPL5leXsdzZ7UBC6HfZ
K/r///+XNxOWmY4kxC9ZXpjP6vuUc3OT9R4SrrzNPXiL1Q/e2w1mOpMQ46/t
qsnuL01XTEewlwTXhatMDcxE6KfE7WX+riRsXX7+43skQlZPbVSW7idBQwVL
S64QofwUcbLTja2nXvnzWlqEprsUzEtxJyHj0BM9GZbvXTTsZ5sfIuHuieuh
vf8YxB+d+t8UTxIqVVQH7XoZxGGK/lZ6keDu5NC3s5VBATGOP70Pk6AjsBr9
wWeQJl32uf0ICalyzuUfYxl0ttfp7YWjJKivefHdwI9BX8qkXpgEkMDg4FXr
7Bh0ebOrqCSQ7Vfrj1LSXAZJ+sllnztNwkTMzmWuCULkhviphmEkVBjfPfLR
U4iY6YcujIaT0LS47MwsEyE6fpkJcYli/X5QYXHypwB11/ns0YsjQZqb83m2
kQAZXSBsB+NJmLeaOL1Djj0POzw2v3mRBB4KuuvSyUe2AxSSu8T2s6Jh++cT
7HwufM7tzSAhMlvb8cEmdp4/B83NyiQhauVaXkprDTpRoCJle5WE5/KN97T3
1qBVRqcmmGskvOi+Xjvhex9leWi+Scv7//PA9PXZoCoUzI9J3nyPhGnFCZ5P
lpejnrf8hLFKtl8cp73Vzy5DO8aH4m5Us/27qlKJli1D6lo7o8T5JEx3O7lw
b18JastTOl5Vy/bPTpcPPReL0IpL2H5JC6u/T1EuwiQPffEYIGb2kzDUe9Y3
Vi8KWUYvUrj3g/Vz7JJ85/tQVH3TZt7+QRIOWz1PKRQ/gS523p/NjLDzef1o
qPQCRwR2Z8UCJ0i4v1t8u3dlCE414n3smU6B3p3fMcXLL+MtCtY5jxdR0Los
4cPc6rs4+ZMG316Jgs5Dd74vMSvCn+5Me9OrTLH99Ged6psiHATV0rOXUJDu
Nt+nfKQY33blBW1bTgEhdi5Bi1OGZxQOWLWvo6BS92BflnIl3nGs3sMDUVAn
q2JilVWJswxzzvwFChYvm/XHTaEK67ywrSGNKGh88TqqYFo1dvuNVV1NKTCO
b1rd3ngf1xmdF+vbQUFA55+6gRA+njPLTSHYloINgZFp3wv52LHVQEt6JwXj
WYM23e/4+OeBkYMrdlHwq/hdwos1AqwU69B6dC+7H/W2xjVvBdjHVmvwP1cK
5N491OgWF+IaSloqZR8FlolXlCJUhdi6hDGsOkDBaRObnmOHhTjslVr+Py8K
Drdm1koNC/GzLIlHcYcpcNth6/9BhsGcQ+86KV8KOMu74s9rMLj4b/wCo6MU
LBVIah1leehv3cFVL/wp6O65EHb7BMvb8cbm+45REN8jUVfO8tNH3ljYmSAK
slKkj25keUvje1PmgpMUTGz9pfXoJYOPl92uzA2m4N/7cwkLexhcGxzxYm0I
BRozPPbpTjB4zqY9P56cpmD+qdAkZSkRdpyjO9MxjALfBA7VwfJf7htZpf5w
9vrHw3L7/v99kmvf4VQkBUmmGy+Wsvxo4FlnLxNFQZP+m6eNLF/+buveIDpL
wbFvIeUxFiJcsl5yhf85Cp441y95t1OEPfI1uGrnKZDVuuWD94qw0gLLaW9j
KTi5p/fbsoMi/CHUdyg2ngKvOAuZFYdFOKUv8Z3hRQoSM8KPCv1E2Mqu4tFI
AgXVamsedQSwvC56XXIziYLvPnOex7K8XavxJ9M+mYJ9Bo+9nrBxcIpi9KxU
CpDcgquXWP7WljA8Kkhj93dAcHyA5flBTxenIxkU2GidU3/N8v7tVxFmypkU
XIsyFrNizwOuRrfWvL5CwVbbcju7fSJMFNTTMVlsvf2yyn7sEuG2BX1ScI2C
Q6Wl+fO3i/CFMOmxwRwKXuuHDj03EeHN/Ss+5dygQHvqEQuunghL7LR+anuL
go3H7uWOLxXhGpF/5cw8Cjxt103yJEQ4QDM1p+Y2BXf5sYf82HosT62OO5zP
9u++ZkKW5e1rXpP2t96loPTXnCvyTQx2fM2zOlvM6uHtswquYvA84w3r1pVS
IDW8aE5YNoPPLoyWza5g+2FYL9HNi8FG4Xf+WldSoBYeJWG2jcF/+p92T6um
YDb60ta0msHeD+T4npgCM80P85p/CrHasjV5lID1+2z3oMULIe5MtUtqEVKg
uyFaNrBIiHd4Xz6kW8vuT6Fr1js3IdZTUFkwtYGCP4bt/qq1Avwz3FTiXiOb
n+e9Z1uqABf8ONR/8BkFkiHZfOQhwHTt3QfPm1n9jbFFh2YL8LTDa30yXlMQ
bHq0yM+Yj4Vvdu2yaKdANe/cbBlpPg7ccMpE/B0FZJOT7dxijPsUHhAHOlg/
1kkttWiqwS21W+tXdVEwJWav5ejPapzJcV70ZISCIWG3U9KHCqy7comG8y8K
bulPyDY4VuCWTcNrRkcp+LS3IC3sTTme5h+xedEE+/y45R+a9KwMez/P9Qma
TENU9ejUpbklGCKG+OqzaXiVYP47my7EH/vDdsWo0BA2v7V56dUUHDR1636e
Gg0BcvpKAuISlufOO3xvCQ3GG9DPrtQEbGp6K+yzBg3uffYZKoqxuOhaQ966
1TSQly8KHlT64VA7+d/fDWj40AbP9Ipi0CLmRtJWexpW2N46f3F1HmpUH73W
7kCDxEZxhnS6jQKSTIrdHWmAnD28SdF3UP2B7qcRTjR4DqzU8HtVgHykl0zH
+2mQbP9yIEuzCOFd+YGaR2ioWrRi5tvgMuRW9zfqvh8NZTxOqL5EOZqz3Dx5
sz8NXyMllxlFlqN9Ej9K9h+nYRH/3lZuVAWSzFvel3mKBvu2mzYrAyvRztGS
PdIxNPh7rd6UOacGSThP8bp8ngZVg6FZL07UoPx66xPqcTTIB+yW1/9agyZl
/kwxuUiD74xUOr4Eo5vG2s2nUmgwKzL8timdj6wKznTMSqPBe+GjR7se89H4
/Ff96ek07IgtGPD9xUdbe49J3sukQbwjIzJ9qwCNXKgyHsihQVrz1/TkHwJ0
eWLm9uAbNCQ7JEz3lxcik30OzlK3aDA1caowWitE6Tp/TqrepuGGo1VodogQ
bcjeElN+hwYlGypgWbYQ9UteTjMuoOHjoZKGbEaIDD/oVzgV0aCx+vRkrUkM
6t0UW9tfTIPFqV3IkmBQUvH7lhOlNGyR8EverMug7ohTAykVNNSt853b6smg
Cz+e/VOupOFytaOiaySD9HZSs8qqWL8+1cg8ucyguKVCtaYaGhzsO3UVHzPo
prb99NN8Gnq3my24/Z5BeP3w1+VCGsT+NB5vHWLQy60xtR0MDWPP80Yzp4pQ
n51STvwDGlZerTeSmC9CU1xxqEEd22/3X6qKs3zM8bZ1HnhIQ0iQaXQay8er
Agfg6mMalv055/pkvQhtjjiraPmEhhma/xoSzFl+jef9FWtk9ZFSQ0N2InQ8
vbq98CkNRuf1ON3OIhR/w7pqz3Maikt0cn3dRehmUV+KdDMNl5w+yl/0FiH+
/cgAfgsNUzaYj2zwE6HWh6SN90sadkW+GTgfwOptvreabKNhfqxakzvLv1Pf
W8k9e0XDo/nqfq/ZmNvzbTD4DQ3rThLNb4+xekfCnmu+pcHDIPbPEZaPzcSI
wvfv2Hq22Cle8RWhvTPLz8d+YPVevha025PVK2/hgT7SwDVo9yneL0IXqO7N
/Z00qCy4E5C+W4RuqZ9Wy/xMQ5LYOFdhB6t3jcJ08680TDNvnblsswi1GZZ8
/dvF1muhn0S7vgj1b9lSm99DQ8c9hU7F5axeuy/XHHtpcIuclz5BiRDhEhw6
q4+GjK6ber4yIrTaa75zTT8ND5MHesJYPjY7fpedRRoUdT58XsHycWBc55+G
YRrmZXVqHxCw/ZEW1H7iJw3/VKaeHb7FoNzrc6uWjtLweG3pAjqeQW3VGwNi
xmnot+oedLdn0I+6DzvW/aFh0+CrX1H6DPqv+djq739pmDP47a7V/3/P3J03
aDaZByt6Xgu73wvRlmGj5xPiPAhKtb9YfV+IXP69Lbg9hQepISMzDVOF6OJc
aQ/J6TzYKpXd5WkuRD8Mjnytn80DvVavodRcAZq2Rao2UIYHstMLJbacFCBF
2+vXlsjy4MX9mv46CwHa6tnmFC3Pgw4d49mLB/koL1Wv3ZTLAyVTT53XSny0
b0ji+SM1HrwL974tLKtGjrlGjQ7qPDBtVZg+YFiNdjiF1fcv5UHXGfviAw1V
aMNT8dq5y3nwt/1k4I63lUgpb3KV0xp2PZtn8K27An12FssZW8+D9fXi3Orq
EuTSNB6guosHOXL6Blun3kAOUWuPVjvyYO1+03qdZzloOwT6mu/hwcIpWqea
k68ho/zfHn57eTBiPvOVg1IWWnR2zFlwgAfxB65Flh1IRZ0Gv8zsjvKg+v2r
iqLTx5Dz3UEyKpYHlk4RSg9eXsGHTm+bMI3nQeZYQLylVhb221bSKnmRB/3+
6SEnE7LxmRG/83FJPNASJPhZmF3H+Tpj45cyeDCaQQ+NXs/DY4J/L6/n8eC9
TXvQ+GgRnnxxT5HbHR6UBxhKVl8qxpIughi1Ah5IhmkHTV5dgompoUb5Raxf
8UT+gHspNjKdWlR6jwfhtWfr5ZhyHNckGSOq40H31AvvShdW49RsD7eIRzzw
S/VQPJdejbOPNK43qWfz7Stbocu5j8vk437XN/JAxd/3+C+5Gty+U9at+QUP
fvgszRzqwfjLkiPrE1t54K+VtMJwKR/3T7QQNq94oGZZ79y0l48nZya9eN3O
g97JSY06DXys3Llg/cdOHkhsnZ1UHifAy0qOE9c+82AgW++0RY0A64a/GXP9
yoMZuxL/XegRYDPljMLuHh7oRCl5/YdYfhj9E53XywPlV0fFV+4X4t2PHPd7
9PEALc7wGI8RYp+DJDEwwIOCI6fVbVqFOEgvZKxoiO0XdGrs05gQh0t9bDky
woMWS70YCQUGJxdkR4+O8qAhtUK535bBWack9lf+5oEwPiq01I/BeZauhkET
rN8uCRYS8QwuoWu5+n950BnREvwql8E1Q0pj//6x+uffJ1YyDP4fqzFCmA==

              "]]},
            Annotation[#, "Charting`Private`Tag$1277585#1"]& ]}, {}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->All,
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{0, 10}, {-0.1599999999999167, 0.1599999969945352}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}]}], "}"}], "/.", "\[VeryThinSpace]", 
      "x"}], ")"}]}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.7716902125262313`*^9, {3.771690390997328*^9, 3.7716904208316517`*^9}, {
   3.77169075911199*^9, 3.7716908129117274`*^9}, 3.7716910247526026`*^9, {
   3.7716911044593315`*^9, 3.7716911293627863`*^9}, 3.7716911928402376`*^9, 
   3.771691243006454*^9, 3.7716912975437136`*^9, 3.77169132932693*^9, 
   3.771691462130192*^9, 3.771691550198506*^9, 3.771692399766131*^9, 
   3.7716924412290783`*^9, 3.7716925380390577`*^9, 3.7716925775091352`*^9, {
   3.7716926197711725`*^9, 3.771692638495798*^9}, {3.7716927487623005`*^9, 
   3.771692760237159*^9}, 3.771692790918396*^9, 3.771693170434284*^9, 
   3.7716933391637545`*^9, 3.7716934137409735`*^9},
 CellLabel->
  "During evaluation of \
In[383]:=",ExpressionUUID->"7fe4e7a5-3e7c-4316-a9f7-aecbc395e567"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`$time$$ = -4.939426525949198, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`$time$$], 0, (-2) Pi}}, Typeset`size$$ = {
    1012., {51., 57.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`$time$1277875$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`$time$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`$time$$, $CellContext`$time$1277875$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[{
          Apply[Sequence, {
            Circle[{-4, 0}, 4], 
            Circle[{-4, 0}, 1], 
            Circle[{-4, 0}, 
             Rational[4, 9]], 
            Circle[{-4, 0}, 
             Rational[1, 4]], 
            Circle[{-4, 0}, 
             Rational[4, 25]]}], 
          Apply[Sequence, {
            Style[
             
             Line[{{-4, 
               0}, {-4 - 4 Cos[$CellContext`$time$$], (-4) 
                Sin[$CellContext`$time$$]}, {
               0, (-4) Sin[$CellContext`$time$$]}}], 
             Hue[0]], 
            Style[
             Line[{{-4, 0}, {-4 + Cos[2 $CellContext`$time$$], 
                Sin[2 $CellContext`$time$$]}, {0, 
                Sin[2 $CellContext`$time$$]}}], 
             Hue[
              Rational[1, 5]]], 
            Style[
             
             Line[{{-4, 
               0}, {-4 + Rational[-4, 9] Cos[3 $CellContext`$time$$], 
                Rational[-4, 9] Sin[3 $CellContext`$time$$]}, {
               0, Rational[-4, 9] Sin[3 $CellContext`$time$$]}}], 
             Hue[
              Rational[2, 5]]], 
            Style[
             
             Line[{{-4, 
               0}, {-4 + Rational[1, 4] Cos[4 $CellContext`$time$$], 
                Rational[1, 4] Sin[4 $CellContext`$time$$]}, {
               0, Rational[1, 4] Sin[4 $CellContext`$time$$]}}], 
             Hue[
              Rational[3, 5]]], 
            Style[
             
             Line[{{-4, 
               0}, {-4 + Rational[-4, 25] Cos[5 $CellContext`$time$$], 
                Rational[-4, 25] Sin[5 $CellContext`$time$$]}, {
               0, Rational[-4, 25] Sin[5 $CellContext`$time$$]}}], 
             Hue[
              Rational[4, 5]]]}]}, Axes -> True], $CellContext`$time$$ + 
        ReplaceAll[{
           Graphics[{{{{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  AbsoluteThickness[1.6], 
                  Hue[0, 1, 1]], 
                 Line[CompressedData["
1:eJwVmXk8VN8bx+1mP5JlBmFmhKRVKlL3IVKiVEi2QkhFviRCpbQoa6goUdIi
0oKilIO0WiNkya4sZd/J7/7mj5nX+3XvPfc5n8/zPOeeO1ynY7tdhAQEBNzJ
r///3j7tJLbqYNgmw/n/fxB+X61sulfZnTg3ns4bJ3n+w7sQZeWTROqcY1g9
yayYl89o9eeIwN1rdB+SfBtHKIkqXyYabPVXOJGsOXAwct4tiriclnWYSnIz
K+nfbF0MsWS0sD/xH8IqD6hrp2euEaxFT3MUSD660ddjQimBUFj+pSR0DuGs
mtbU0c2JROw+z0VtswhPHzFtGnJLJuqnhN4uJvmOYNPlCaO7hNbVmVSrGYQN
y64uHq9LIa58rvvuM43w73jjwlH3VGLhcb75qSmEww/O2Y3M3CdmQ09I+Uwi
XD1zKG5QKY3Qj604xR9H+MRHxZUDzx8TzusNVH6OIiwXW/P1z+YMIuLBNdkL
Iwg7aYBwn9tTQr124+8bgwgLzQRUjAY9I6Y9DnwUHkC4ptVy0ajRcyIoYH7c
9g/C/hn0vOG6F4S5Us32qh6ETWK6xYbvZBG1Ket9/v5CWMG/0GLIPZuQ9/Ib
mOhCGG/2GxyYySGCeG59FW0Iize2q/1RyiPGVful4+oRrsdvfft/5xE/d6dT
pGoRfvwgvrjv+Wti0YYttsHVCO/w3rG/d3M+UT7rq6pYjvB16uvrv9wKiJiA
Vec9ixDO9jPx9mFj4pbY39RdBQgn9q7jjARhQl8wUoubj7BnpaTbsFEh8TjE
MeVCDsKSiZ+EhuqKiIs3bAQOPkR4hvUyzUuvmOgea/v8+B7CnWfvmQ/eKSZs
w6wlfyYj/NLtdNKA+3viXc+pJbR4hG201uj+nSkhLITX5PhfQvjul+T/+pQ+
EwZdMxHPnRAejc/RaAn/TPzIW2doZY/wFrevHd+mPhN3lan6nXsR7heesHxd
/YXwYxkp5psivH7jDt3Ll0qJDur9H7baCFc+nRVSG6ggeDfGFu0XIuMlqA7M
5ZXEhlttujdnWHiDapzupYOVhN7L1V3vRlk4cjRtJKCqksi6MjL2vpuF11z9
7uKUXkU4mVNuvP/Mwme+aJqs2l9NdMQ6XrgexsKPnr9STb9WTcRqaQ8eDWHh
b/EGwotLqwm72TPEskAWVnGzzmfr1BDu7d73jhxm4S/C55cLLPxOfBeQ0mw1
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
+02P
                  "]]}, "Charting`Private`Tag$1277397#1"]}}, {}}, {
            DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
             AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
             GridLines -> {None, None}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
             All, DisplayFunction -> Identity, AspectRatio -> 
             GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
             Identity, Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
               None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0, 10}, {-3.9999999999999165`, 
               3.9999991867182927`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
           Graphics[{{{{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  AbsoluteThickness[1.6], 
                  Hue[
                   Rational[1, 5], 1, 1]], 
                 Line[CompressedData["
1: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
bLh3Ka9iM/ofQW8BLQ==
                  "]]}, "Charting`Private`Tag$1277444#1"]}}, {}}, {
            DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
             AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
             GridLines -> {None, None}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
             All, DisplayFunction -> Identity, AspectRatio -> 
             GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
             Identity, Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
               None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0, 10}, {-0.9999983022923676, 
               0.9999999999999167}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
           Graphics[{{{{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  AbsoluteThickness[1.6], 
                  Hue[
                   Rational[2, 5], 1, 1]], 
                 Line[CompressedData["
1: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
vOs=
                  "]]}, "Charting`Private`Tag$1277491#1"]}}, {}}, {
            DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
             AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
             GridLines -> {None, None}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
             All, DisplayFunction -> Identity, AspectRatio -> 
             GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
             Identity, Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
               None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0, 10}, {-0.44444444444436115`, 
               0.44444376697522614`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
           Graphics[{{{{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  AbsoluteThickness[1.6], 
                  Hue[
                   Rational[3, 5], 1, 1]], 
                 Line[CompressedData["
1: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
26oVvKsC/wfUDSdp
                  "]]}, "Charting`Private`Tag$1277538#1"]}}, {}}, {
            DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
             AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
             GridLines -> {None, None}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
             All, DisplayFunction -> Identity, AspectRatio -> 
             GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
             Identity, Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
               None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0, 10}, {-0.24999994176165366`, 
               0.2499999999999167}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
           Graphics[{{{{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  AbsoluteThickness[1.6], 
                  Hue[
                   Rational[4, 5], 1, 1]], 
                 Line[CompressedData["
1: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
QcBBk2StOiURXlJhslL3PwKqbxvLFKwSYbNHVJrbDALKU2PcbAxYnnz9e/Il
KQIWVJgcwWYifO5bs/sDaQI2HZ9/6ssOEb49cbtpSJYAL1Ofb/W7RfiJVIQu
PY8ARe9bql4sv/YSu7MsFhLwQvBL8JTlW8ll2jOCuQRULgw3/+4jwuoGMj53
SAK2JXqE1B1l17fqefWGR0Dy2dqFjiw/H9rLGMxQJmCtddZgIcvX546k39JW
I6Ctbc4wZuM74X4y+5cSMPBEjYhmr+/V23U6fBkBexVaptIsb6sPGw1lryTA
/WZARwjL2wfz1F2EWgSUHFz5OddThHOd5V580CHgxsuL9hlurF8LJoz/6RGw
82jKFTsnEVZ93lnGBQJsTuTTH2xF2O1MvbLeegJ2rb7qvJw9b9xExck7NxCQ
aJc+tMVIhLt+pk4/tomAz3ZEoJa2CCvnnz5+yYyAyMj+wm9qIrzP1f1bqTkB
aUvm7fbkiPB1jpVDixUBRWeeOmFJEf7SrNMwaE3AobqAG+/HGbw4mtKXsSPA
++nZZc+6GXxt7Ifi1t0EyCp1uikJGfypsC3ukDMB+amTfM/fZjDPjT8p2pX1
227u0fpEBme9jO2sO0jAvKvpHx6x57mOGP/tXzwJiI/qXnbelMGk8e4HEj4E
HDEq2rxUk8GZxRo3DAJYvbyzPpNHhPidu/z8PYEE5EUUDq59KcQE/ffMyZME
VFWbLbYpE+L0uAb3qjB2/95PjXV9hTjV45DG6ngCzsTsSO19z/L4ou2Z2xLY
fPMTHA5VCPCC9rXSPpcIsC63efQuVoCTTWcO5mewn/cx23LWCnCicm6pSi4B
TpYZR8Qi+bjlXbzSxjus3g4nZwcbPpZLOnbJtZCtL+/LD6zE8rrEpmNZZQQ8
e20oty0c47iOr3ochgBx+8o5Ze/u42fJT+/o1hIwHjWnI9b7Pp5tUU7YPSJg
/usE3Vyx+/h8TYRY0lMC7u5YoVelUI3PpS0WzW4n4KtybNss/Uocab13s/gI
AVsGqlOf6pThLPN2B9dRAjokg2qib5Ti6k3WnnXjBHCG7K6JZEvx4LqN8dGT
FcFk3F/h5ddi7KC0pFVWWhE8xt7JZgbfxSt+DTovWqIILos4R6/03cTvkk8f
N3ZShMLoirg2nxN47MJ49A0XRQg7t1hi21UfLBdzJGO6myIUFWStnaS7G28K
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

                  "]]}, "Charting`Private`Tag$1277585#1"]}}, {}}, {
            DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
             AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
             GridLines -> {None, None}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
             All, DisplayFunction -> Identity, AspectRatio -> 
             GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
             Identity, Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
               None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0, 10}, {-0.1599999999999167, 
               0.1599999969945352}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, 
             Ticks -> {Automatic, Automatic}}]}, $CellContext`x], PlotRange -> 
        All], "Specifications" :> {{$CellContext`$time$$, 0, (-2) Pi, 
         AnimationRunning -> True, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{1069., {96., 103.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7716895203426795`*^9, 3.771689554092636*^9, 3.771689599175085*^9, 
   3.7716896889587593`*^9, 3.771689737065476*^9, 3.771689776906274*^9, {
   3.7716899569889436`*^9, 3.771689973112611*^9}, 3.771690155226351*^9, 
   3.7716902128541484`*^9, {3.771690391097282*^9, 3.7716904209356427`*^9}, {
   3.771690759243959*^9, 3.771690813071686*^9}, 3.771691024880562*^9, {
   3.7716911047032957`*^9, 3.771691129574729*^9}, 3.771691193132101*^9, 
   3.771691243330372*^9, 3.77169129767968*^9, 3.7716913294843416`*^9, 
   3.7716914622701554`*^9, 3.7716915504864545`*^9, 3.7716923998861175`*^9, 
   3.771692441345557*^9, 3.7716925381497717`*^9, 3.7716925776331077`*^9, {
   3.7716926198911643`*^9, 3.7716926386082435`*^9}, {3.7716927488662567`*^9, 
   3.771692760357149*^9}, 3.7716927910183697`*^9, 3.771693170623801*^9, 
   3.771693339299719*^9, 3.7716934138609467`*^9},
 CellLabel->
  "Out[383]=",ExpressionUUID->"fa59df45-afe6-4ea5-9320-0905c88ec685"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing code (No longer in use)", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716922128725424`*^9, 
  3.7716922360138683`*^9}},ExpressionUUID->"624157b2-ee44-4262-9a4a-\
fa0b768885cd"],

Cell[BoxData[
 RowBox[{"list1", "=", 
  RowBox[{"{", 
   RowBox[{"lineList", ",", "lineList2", ",", "lineList3"}], "}"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716910425242453`*^9, 3.7716910571383734`*^9}, 
   3.7716922360138683`*^9},
 CellLabel->
  "In[301]:=",ExpressionUUID->"a57c22ff-ac83-4ae3-a82f-d0435a5f47ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"lineList", ",", "lineList2", ",", "lineList3"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.771691058423955*^9, 3.7716922360178666`*^9},
 CellLabel->
  "Out[301]=",ExpressionUUID->"4b4dd943-8e6e-4453-9de8-64e5f8739c82"],

Cell[BoxData[
 RowBox[{"list2", "=", 
  RowBox[{"{", 
   RowBox[{"color", ",", "color2", ",", "color3"}], "}"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771691074290324*^9, 3.7716910769420176`*^9}, 
   3.7716922360178666`*^9},
 CellLabel->
  "In[302]:=",ExpressionUUID->"ceb92c2d-9226-43aa-9420-582f820fc500"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"color", ",", "color2", ",", "color3"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7716910772506075`*^9, 3.7716922360178666`*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"40c93c2f-299d-4d83-87f6-0cbbdbf68d5e"],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"Style", ",", 
   RowBox[{"{", 
    RowBox[{"list1", ",", "list2"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716909009041877`*^9, 3.771690952499563*^9}, {
   3.7716910632363887`*^9, 3.771691081270108*^9}, 3.7716922360178666`*^9},
 CellLabel->
  "In[303]:=",ExpressionUUID->"13f12794-5c9c-498c-8309-f376e403c1b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"lineList", ",", "color"}], "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{"lineList2", ",", "color2"}], "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{"lineList3", ",", "color3"}], "]"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771690894288929*^9, 3.7716909100356417`*^9}, 
   3.7716909529434185`*^9, 3.7716910818863783`*^9, 3.7716922360178666`*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"e7550af3-ead4-47dd-bfa8-484990e469db"],

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Hue", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "1", ",", "0.20"}], "]"}]}], ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771686613692091*^9, 3.771686660003517*^9}, {
   3.7716867093561764`*^9, 3.7716867631723423`*^9}, 3.7716922360178666`*^9},
 CellLabel->
  "In[236]:=",ExpressionUUID->"d29e8bec-0801-4f22-9724-e80efbd6a9a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0., 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0., 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.20000000000000004`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.2`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.2, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.4000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.4`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.4, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.6000000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.6000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.6000000000000001`", "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.6000000000000001, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.6000000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.8], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.8000000000000002, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.8`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.8, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.8],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716866176057663`*^9, 3.77168666062599*^9}, {
   3.77168672226366*^9, 3.771686764085085*^9}, 3.771692236021865*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"ce741440-040f-440e-a8a2-28e3e1665a7d"],

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771686648791292*^9, 3.77168664926026*^9}, 
   3.771692236021865*^9},ExpressionUUID->"28108080-dabb-4fd2-9fc1-\
c77c910a74e1"],

Cell[BoxData[
 RowBox[{"radius", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FourierCosCoefficient", "[", 
     RowBox[{
      RowBox[{"x", "^", "2"}], ",", "x", ",", "p"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "1", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771685524689541*^9, 3.771685565975581*^9}, {
   3.771685695775566*^9, 3.7716856983263664`*^9}, 3.771692236021865*^9},
 CellLabel->
  "In[215]:=",ExpressionUUID->"c645d17e-0133-487b-b173-8780eb8a6140"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "4"}], ",", "1", ",", 
   RowBox[{"-", 
    FractionBox["4", "9"]}], ",", 
   FractionBox["1", "4"], ",", 
   RowBox[{"-", 
    FractionBox["4", "25"]}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716855422705774`*^9, 3.7716855674922132`*^9}, 
   3.7716857137075944`*^9, 3.771692236021865*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"8d8efea3-a7a5-477a-8d54-97a3e666cc6a"],

Cell[BoxData[
 RowBox[{"basicCoord", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Times", ",", 
    RowBox[{"{", 
     RowBox[{"radius", ",", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"Range", "[", "5", "]"}], "*", "x"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716857008562155`*^9, 3.771685746496272*^9}, {
   3.771685810707986*^9, 3.7716858145629864`*^9}, 3.771692236021865*^9},
 CellLabel->
  "In[220]:=",ExpressionUUID->"99a5876b-41a4-4703-a784-51ad1f9701e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x"}], "]"}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["4", "9"]}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["4", "25"]}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"5", " ", "x"}], "]"}]}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771685715794005*^9, 3.771685729807185*^9}, 
   3.77168581668657*^9, 3.771692236021865*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"1f28591e-4fe2-470a-9c50-65ea688c2150"],

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"basicCoord", "-", "7"}], ",", 
    RowBox[{"basicCoord", "/.", 
     RowBox[{"Cos", "\[Rule]", "Sin"}]}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716857320263753`*^9, 3.771685776660055*^9}, {
   3.7716858339812737`*^9, 3.771685880808607*^9}, 3.771692236026353*^9},
 CellLabel->
  "In[224]:=",ExpressionUUID->"d90ccb7e-2138-4f98-b463-15788e043420"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "7"}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", "x", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "7"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "7"}], "-", 
      RowBox[{
       FractionBox["4", "9"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "9"]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "7"}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "x"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "7"}], "-", 
      RowBox[{
       FractionBox["4", "25"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "25"]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"5", " ", "x"}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.771685757832512*^9, 3.7716857773721914`*^9}, 
   3.771685820268506*^9, 3.7716858504673567`*^9, 3.7716858816091366`*^9, 
   3.771692236026353*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"c02dddee-77ef-4c97-bbe7-9e1e0d96136d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "maxRadius"}], ",", "0"}], "}"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
     "Color"}], "]"}], "&"}], "/@", "basicCoord"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.77168564940893*^9, 3.771685660357341*^9}, {
   3.7716862239772215`*^9, 3.7716862942452555`*^9}, {3.7716864254851046`*^9, 
   3.7716864787605*^9}, 
   3.771692236026353*^9},ExpressionUUID->"f30116ae-166a-40ae-b6dc-\
f950056ecb19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "YCoord"}], "}"}]}], "}"}], "]"}], ",", "Color"}], 
    "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "YCoord"}], "}"}]}], "}"}], "]"}], ",", "Color"}], 
    "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "YCoord"}], "}"}]}], "}"}], "]"}], ",", "Color"}], 
    "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "x"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "YCoord"}], "}"}]}], "}"}], "]"}], ",", "Color"}], 
    "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "25"]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"5", " ", "x"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "YCoord"}], "}"}]}], "}"}], "]"}], ",", "Color"}], 
    "]"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716862725981407`*^9, 3.77168629476546*^9}, 
   3.771692236026353*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"09e32c5a-c3c4-4b5c-bae6-3dd4ccf8479c"],

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7716862555166607`*^9, 3.771686256545244*^9}, 
   3.771692236026353*^9},ExpressionUUID->"2bc3a502-23c3-4678-8a4e-\
789d6d81facc"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"circleTest2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", "#1"}], "]"}], "&"}], "/@", 
    RowBox[{"Abs", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"FourierCosCoefficient", "[", 
        RowBox[{
         RowBox[{"x", "^", "2"}], ",", "x", ",", "p"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"Animate", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Show", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], 
                    RowBox[{"Cos", "[", "t", "]"}]}], "-", "7"}], ",", 
                   RowBox[{
                    RowBox[{"-", "4"}], 
                    RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"-", "4"}], 
                    RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], "}"}], "]"}],
               ",", "Red"}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"-", "2"}], "t"}], "]"}], "-", "7"}], ",", 
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"-", "2"}], "t"}], "]"}]}], "}"}]}], "}"}], "]"}],
               ",", "Green"}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"4", "/", "9"}], ")"}]}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"-", "3"}], "t"}], "]"}]}], "-", "7"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "/", "9"}], ")"}], 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"-", "3"}], "t"}], "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "/", "9"}], ")"}], 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"-", "3"}], "t"}], "]"}]}]}], "}"}]}], "}"}], 
               "]"}], ",", "Blue"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
          "\t\t\t", ",", 
          RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"x", "+", "t", "-", 
               RowBox[{"(", 
                RowBox[{"Pi", "/", "2"}], ")"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"-", "2"}], 
              RowBox[{"(", 
               RowBox[{"x", "+", "t", "-", 
                RowBox[{"(", 
                 RowBox[{"3", 
                  RowBox[{"Pi", "/", "4"}]}], ")"}]}], ")"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"4", "/", "9"}], ")"}]}], 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"-", "3"}], 
               RowBox[{"(", 
                RowBox[{"x", "+", "t", "-", 
                 RowBox[{"(", 
                  RowBox[{"Pi", "/", "2"}], ")"}]}], ")"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], "\n", 
         "\t\t\t", "\n", "\t\t\t", "}"}]}], "\n", "\t\t\t", "\n", "\t", "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], "Pi"}]}], "}"}], ",", 
      RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}], "&"}], "@", 
   "circleTest2"}]}]}], "Code",
 CellChangeTimes->{{3.771682910195552*^9, 3.7716829199790616`*^9}, {
   3.77168297210044*^9, 3.77168299066098*^9}, {3.771683154916765*^9, 
   3.7716831896465254`*^9}, {3.7716832698012247`*^9, 3.771683358103424*^9}, {
   3.7716834158263206`*^9, 3.771683542855215*^9}, {3.771683718718241*^9, 
   3.771683773461047*^9}, {3.7716838507863026`*^9, 3.7716839946302814`*^9}, 
   3.771684061652421*^9, {3.771684108091118*^9, 3.7716841930837564`*^9}, {
   3.7716842244262376`*^9, 3.7716842724901085`*^9}, {3.771684329466204*^9, 
   3.7716845161721044`*^9}, {3.7716845483891993`*^9, 3.771684579029232*^9}, {
   3.7716848784837656`*^9, 3.771684916064314*^9}, 3.7716852554932036`*^9, {
   3.771692818906029*^9, 3.7716928196585073`*^9}, {3.77169285243508*^9, 
   3.771692860916299*^9}},ExpressionUUID->"10a39830-d5c6-43dc-ba97-\
0c1f76e441ef"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = -0.012566370614359173`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, (-2) Pi}}, Typeset`size$$ = {
    414., {81., 88.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$1263107$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$1263107$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[{{
           Circle[{-7, 0}, 4], 
           Circle[{-7, 0}, 1], 
           Circle[{-7, 0}, 
            Rational[4, 9]], 
           Circle[{-7, 0}, 
            Rational[1, 4]], 
           Circle[{-7, 0}, 
            Rational[4, 25]]}, 
          Style[
           
           Line[{{-7, 
             0}, {(-4) Cos[$CellContext`t$$] - 7, (-4) 
              Sin[$CellContext`t$$]}, {0, (-4) Sin[$CellContext`t$$]}}], Red], 
          Style[
           Line[{{-7, 0}, {Cos[(-2) $CellContext`t$$] - 7, 
              Sin[(-2) $CellContext`t$$]}, {0, 
              Sin[(-2) $CellContext`t$$]}}], Green], 
          Style[
           
           Line[{{-7, 
             0}, {(-(4/9)) Cos[(-3) $CellContext`t$$] - 7, ((-4)/9) 
              Sin[(-3) $CellContext`t$$]}, {
             0, ((-4)/9) Sin[(-3) $CellContext`t$$]}}], Blue]}, Axes -> 
         True], {
         Echo[
          
          Plot[(-4) 
           Cos[$CellContext`x + $CellContext`t$$ - Pi/2], {$CellContext`x, 0, 
            10}, PlotStyle -> Red]], 
         Plot[
          Cos[(-2) ($CellContext`x + $CellContext`t$$ - 
            3 (Pi/4))], {$CellContext`x, 0, 10}, PlotStyle -> Green], 
         Plot[(-(4/9)) 
          Cos[(-3) ($CellContext`x + $CellContext`t$$ - Pi/
             2)], {$CellContext`x, 0, 10}, PlotStyle -> Blue]}], 
      "Specifications" :> {{$CellContext`t$$, 0, (-2) Pi, AnimationRunning -> 
         False, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{471., {126., 133.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7716843776863394`*^9, 3.77168440667398*^9}, {
   3.771684452826004*^9, 3.7716844873140535`*^9}, 3.7716845179640713`*^9, 
   3.771684584399151*^9, 3.771684887508466*^9, 3.771684917597433*^9, 
   3.771692822839883*^9, 3.771692854323524*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"f3809664-da4a-4a72-b5e7-0ca0ca514048"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"circleTest2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Circle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", "#1"}], "]"}], "&"}], "/@", 
   RowBox[{"Abs", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FourierCosCoefficient", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], ",", "x", ",", "p"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "1", ",", "5"}], "}"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"#1", ",", 
       RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "2"}], "Pi"}]}], "}"}]}], "]"}], "&"}], "@", 
  "circleTest2"}]}], "Input",
 CellChangeTimes->{{3.7716777741919165`*^9, 3.771677932812153*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"04e76c5c-c624-4819-acc2-ff9def3b3e1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", "4"}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
     FractionBox["4", "9"]}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
     FractionBox["1", "4"]}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0"}], "}"}], ",", 
     FractionBox["4", "25"]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.771677851064636*^9, 3.771677866820668*^9}, 
   3.7716779336279144`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"02527822-649a-4092-af9e-24944c4c39a4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = -4.626793451631916, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, (-2) Pi}}, Typeset`size$$ = {
    414., {204., 209.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$94885$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$94885$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         Circle[{-7, 0}, 4], 
         Circle[{-7, 0}, 1], 
         Circle[{-7, 0}, 
          Rational[4, 9]], 
         Circle[{-7, 0}, 
          Rational[1, 4]], 
         Circle[{-7, 0}, 
          Rational[4, 25]]}, Axes -> True], 
      "Specifications" :> {{$CellContext`t$$, 0, (-2) Pi, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{471., {248., 255.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771677851064636*^9, 3.771677866820668*^9}, 
   3.77167793376388*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"8a61c72d-aeb2-4df6-80dd-8b8348c88db2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourierGraphics", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "x", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.771665143167289*^9, 3.771665157369444*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"8832bf5e-9fb7-45d5-9ef6-4f0277ef7e26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x"}], "]"}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["4", "9"]}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["4", "25"]}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"5", " ", "x"}], "]"}]}]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.771673499251958*^9},ExpressionUUID->"7f7d67c0-37fa-4aac-968e-\
0adc205b3517"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "9"]}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "9"]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "x"}], "]"}]}], ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "x"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "25"]}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"5", " ", "x"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "25"]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"5", " ", "x"}], "]"}]}]}], "}"}]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.771673499405866*^9},ExpressionUUID->"291c7577-2df3-4d67-9344-\
7c1dcfbff734"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1219", "900"]}], ",", "0"}], "}"}], ",", "4"}], "]"}], 
   ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "}"}], ",", 
     FractionBox["4", "9"]}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["4", "9"]}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "x"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["4", "9"]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "x"}], "]"}]}]}], "}"}], ",", 
     FractionBox["1", "4"]}], "]"}], ",", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "x"}], "]"}]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "x"}], "]"}]}]}], "}"}], ",", 
     FractionBox["4", "25"]}], "]"}]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.7716734995468826`*^9},ExpressionUUID->"df2f5c2d-d6bc-439d-a041-\
7b1a599415a2"],

Cell[BoxData[
 RowBox[{"Line", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Sin", "[", "x", "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "x"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Sin", "[", "x", "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "x"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "x"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "x"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Sin", "[", "x", "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "x"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "x"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "x"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "x"}], "]"}]}], "-", 
       RowBox[{
        FractionBox["4", "25"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", " ", "x"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"Sin", "[", "x", "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "x"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "x"}], "]"}]}], "-", 
       RowBox[{
        FractionBox["4", "25"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"5", " ", "x"}], "]"}]}]}]}], "}"}]}], "}"}], "]"}]], "Echo",
 CellChangeTimes->{
  3.771673499681296*^9},ExpressionUUID->"4d37e791-a7b4-4b37-a7fa-\
c6c291cc73d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Sin", "[", "x", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "x"}], "]"}], "-", 
         RowBox[{
          FractionBox["4", "9"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Sin", "[", "x", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "x"}], "]"}], "-", 
         RowBox[{
          FractionBox["4", "9"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "x"}], "]"}], "-", 
         RowBox[{
          FractionBox["4", "9"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "x"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Sin", "[", "x", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "x"}], "]"}], "-", 
         RowBox[{
          FractionBox["4", "9"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"4", " ", "x"}], "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "x"}], "]"}], "-", 
         RowBox[{
          FractionBox["4", "9"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "x"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["4", "25"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5", " ", "x"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Sin", "[", "x", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "x"}], "]"}], "-", 
         RowBox[{
          FractionBox["4", "9"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"4", " ", "x"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["4", "25"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"5", " ", "x"}], "]"}]}]}]}], "}"}]}], "}"}], "]"}]}], 
  "}"}]], "Echo",
 CellChangeTimes->{
  3.7716734998408704`*^9},ExpressionUUID->"d5cf71ef-2d70-4208-bbd9-\
ee23845ab4a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "4"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", "+", "x"}], "]"}]}], "+", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"t", "+", "x"}], ")"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["4", "9"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"t", "+", "x"}], ")"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"t", "+", "x"}], ")"}]}], "]"}]}], "-", 
  RowBox[{
   FractionBox["4", "25"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"5", " ", 
     RowBox[{"(", 
      RowBox[{"t", "+", "x"}], ")"}]}], "]"}]}]}]], "Echo",
 CellChangeTimes->{
  3.771673499857608*^9},ExpressionUUID->"76c8be34-a58d-43b9-ae07-\
8d372bd419ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["5269", "900"]}], ",", 
   FractionBox["5269", "900"]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.7716735000039515`*^9},ExpressionUUID->"bcb19b73-7e92-4d22-9450-\
1c4a8742e9df"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.7716693917830453`*^9, 3.771669445959549*^9, 
  3.7716734608112593`*^9, 3.771673500157996*^9},
 CellLabel->
  "During evaluation of \
In[88]:=",ExpressionUUID->"de7f8d7a-7b8a-45cf-9dc7-3388d55d849d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"rawcoordinate", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7716244381260843`*^9, 3.771624461120367*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"dea7b975-55db-4623-b4f7-364e48f6d63e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVW3k8lN8XnrHOvPZtxr5nX4c2Le+JktBmK4UkWSMtoqivSpaKJCGJEqVs
JXsy15J9JxGl7ET2ffvN76/5PHPvPfc5z33e99wzH2QcLpqdZyIQCN3MBML/
P1/ccmDTdny+dw+VvDT0DUMVbdKmJ6Sv49sead2lM/BmZcldaelQ3PwQpn6I
gbkj8z5gnZG42I8MtsB2DL1AYVKs0s/wN1cj1bzaMKQ26Ri+6ZyIKy4GVXK1
Yugnd8LG2vck3Kz+DbttM4bk35C3raym4CnJJhp2jRi6sMfbY1HqHW7JsXaX
rx5Dn9p/J88ZpOOF3Va2PjUYWnE37Zl2zsJj4ldFIiox9JLYE7p44CPeVXVR
3qYcQ/sbHm9Z+J6NV7MSZ7rpGBqJPVg655qDD55LZuItxtBDx3Wb2dVcfG9E
6++lfAy1rbpETUkV4qmbJ8/9zcTQtSpJrcmPRXhsT83RhXcYEn3SXjdhUIwL
LcY9K0jGkIMKMP91puMNvsR9Ts8wxLR6o2nOH+FH2et0zJ9gqP23pcTcgVLc
/tPfjJWHGPJN5yic+V6G49zPKvz/w5Bx5BDbzMty3OGf/W5rXwyJ+5ZaTLtW
4F7Sl6ZnvTCEDHymJle/4ofHP0q7nMUQe3ef4oRUDU5voge44hjqRF+8x0dq
cNXVGzGW2zD0/k1s+d+Ptfjps+/ySOoYOnL5yJkxg3pcJ2x+oFoEQ9Hkouhh
5yb8aSRzb9sUGfHHVzNNf2/F663pl7ZFk9Eqd947r91tuKJ4apfqfTIauP36
2NTLNpwFsxZav0lGec63EiZd2/Fx2xbHHefJ6JSOrt6/1W94ZsiFxO00MnpV
m3jpr1QXXqe968f1KhKai81V6X3YhW9vekV8VUBChs51/a3LXbhpsLZP7jsS
GmdetCxq+4HbDUn+SXtAQjv2HNELDe7Bma0+Rc8eIaHmrDUmxclefI7a0DHV
xo7+q1Uz1j7Tj29L+Os+28OGUj/mK6Q97ceN/beoRjSwodZYfeYt9f346xPD
M+olbEje+WSx8M4BvOfbD5J7IhuqZQ7UIAgM4noW4RU9Z9kQZU83f1PlEP7r
bo3O4iAryswK7b6gMYZLuNY8XuhjQWP8Yw+Nz47h56f1y4ltLEjxmvFepagx
3Eop9tR4GQt6uZvjVf/yGP4pnKnROokFRdY8dDr19S8uLO5f5n6GBV3rfzR9
0GYCr71+liLcwoyyDaeStjyawO8NGY07ljCjyXfHLJjLJvCka/JC19OYkYsX
X36J4j/cK9sxYjqQGZ1aj/TfOvsPr51PvbWqy4wSOeru8h2YwtOqUzeNQpjQ
3j1+NgF2UzhneLmqyyUm1OOpunXSZwovfr9LS+8UExJufTBU/34Kvz00Wzqj
woQex5oeCuGdxmfvpp2Iryaiu1sauTe7p3Gs88Qj5TkCkj1xa9hjfhpXKv8V
KdRJQChEA/Vwz+Appuc+vftMQGt/wy8V7ZvBDQJZztTcJiDv7KPt3m9n8MYb
Xit9ZAJyxluejV+exTvlpm5vEdigE5IWirofzOJ57PpSJ1rW6bEs4j21ybM4
Md6dNBi+Tq+ucZJ81zGLa2c9TBclrdOVLNaSzuvN4cwL7geEZlfpIy6K6b+I
8zgWf9nle/oy3S3yZklzxAJeKn7vpjuao3sOKvfnZC7jmGpuwYzWAP23XRep
tGYZz810Yun27qebd4ZoNAws4wUyVorjRX30HXXD1wdFV/BYbpnXiQf+0Jk/
pvBSglfw+eJ6k7zPPfRYf5m9PmdWcUOkfsVcr4VeKiDybCfvOi4uEUusnc7B
dcOqSw6oruPxw9NtYteL8DdsvgPHDddxXeYNx6sbdPzhcoemm/86biYlXDRz
+ytu1RtVGTeyju+obDSvxJvxsfe8c6toA798Y4rjiV43jskEKvbuIMChDTjj
820Er979WPPWAQIY2txcdr0zigedTNguYUaAjxXnz23VGsOZIgoOnnYnwM0F
Id2A8L/4ysa48/cXBCjaL/OIfOIf/rfHMrWJiQhVprrW/rwz+Pslhw+ePETw
EzLwUvKawV0EvQq4xIlwX0nqWmTzDD5gcr/aZCsRwlncZT89mcV7ikpGqpyJ
cANXFnwjN4/Xxyoqo3oiTG/dOjHnsYTfz9HVPtNFBK05yeaA7iXcqHnfzo1B
IqTlKqaSjZfxCnabQ7s3ifBelbJLQmUFL74W4VqgzQSJyR+9Hi2s4hkWy+8+
RDOB9DvaDumyTTyct07llT0zTJyyxH34WaBwu0TuEU9miFAud+s6wwIDdhfx
NT9mWLa9e6M6gwV2ZQhYnIhhhqXISjF9E1YYOWRzk6uRGXgTzW+bPGQDg7sT
Tdd3sUBuTnKFsxwZluZ5vM0orFBpN7tRc4cb5CQcNjflWEFyG5ML3sUNR/bn
hGZos8KXGpkTcZo8kBJ5MoF0mBXGJfw2+7p5wEzzVVXJXVaYzcgWmY/lhQwX
mqjqNCscP+f+3XuIDzofBSZ3brBCWmlMPMbDDyz5HRpBnGygvtW93Gw7P5xi
9TP4o8gGfMyKheNB/EBKKr8QY8cGPP+Rx9tkBMCh24LOXM8Gp/e8zPipLwjY
8z8el7rYQETZz1/GURCyT3mK9w4x8K2OUz8DBYH5R/D1IiI79IS1zmVWCEJy
Z5HOpe3s0GmlMXJijxCYxh7s+7WfHQxaP+mtWAvB3In2CFMzdti/df+OZW8h
OPB9YkLRgx2+hB57QEgXgqFv0qm/ktghlxL4sJeHAuFPM6xMP7CD1rh7HZ8i
BbZZ6rEWfWGHvf8wmdA9FAhuN3d42skOBQefpu52oYBW1G9e5iF2YNrf03XF
nwKd5h50r1l2MCoKkRl6RAGltiBxU24S2B/L+HU5hwLNkQJ1hWIkwFKtiKFf
KeBr9vK6ojIJtjkkPG35RgFpfnWlp9tI8PxTd5rxIAVqWgo7mPaTwO2Z1oWZ
WQpcfmx4z+s4CdhiBilVRCqIHm/T+WVHAmhHLFXcVHBrHo8ovE4Cjnj7UH0F
KvBHXMcVg0lw6frskc9aVCg6yvYvKooEXmPfcq31qODA8ySeKYkE71nynoob
UIGjScrEK4uBOc7/ZjKhQk54+vLPYhKs7eVM4jCjgs2RnakmtSTwDLYhbjtJ
BRbuSqvC7ySoWCrAb9tSIb3BjFVxkAT5EjaF42epYBHW+ylqhsGHzXfQ5zwV
1kwvODARyMDCc9xK1oUKyZzLvF5cZNC3Ny/860qFw/X36D9FybBAlfve5kaF
hQf8niZKZKDLvn3yg4ETTBLFC7eS4WMx979NxnxDDrU6BQMy7IprIexnxPtX
W3A96hgZfhe8J75l7Bd9/4ASkx0ZNjrD9ik7UGGvcWvHRXcy8LyOUatj8B0i
n7n305cMRP+lQ2GMfB7V/NUxCSLDc64fu7wY+e4I9e0reEKGiRCcfpWhx28j
1scKr8iw/f3vtOcMvUJIkXhUJhlKgzZnBxl6alVL/iMWk8FaY2eyhTYVOoPT
4i/WkMFF9Xj/COM8Ag7uMPnZQYbCicXp12JUUGL/umw8QAYV9YcqwTxUaK48
nlowTYY8s++EKCYq+Ab9slLYJMOFxQpi/RzDH4burFGcGKyHCrVpDVHg0tdA
h4uKGFj/oi4FV1JAcsCQbUEHg84Etlfv8ihQx0R+7w8Y1HFvXRJ5Q4EtEDYd
ao2B+JnA6Ik7FOgqehqQ/ACD/8IdQ6J0KRDUdUJeNRaDvbxk8TNSFNBZEqn+
mIyBoUfIt2AyBcK2JvDQvzDivX2QsNYtBPs+vEnomsTgAnbmV851IfjX6KJv
v4aBaFTYg49nhOD5hMrQEIkDpEXz70sdEIJ5lSz1ORkOkM+YZT7FLQTvUvKL
uS04gPceqS8qThD4nlf/MCjggPmrDhsv4wWgpPD+rdoKDrh91e8Kk58AuHea
yh5v4QCeV5POzNYC8FWoxdVujAPq7f32TgkIwPWIriVfcU7o8TZxaLjHD3/u
jVEyAzjBulyi66QNH3z04jQXPsQFTAaXXbm/cUF9nMD1DCsuaK46Hs7zHxcM
VYgm6jtywVW3tT5+ZS4QFVH+e4HxfZ6yEPuum5wQWHrgbmkuFxxIvMZXpcAB
Vvz/fXKT5QZH+m0f3kDGc7U7qGtTkxtiyg8eEtEmwX2nsM2oPdwQQSS1BPxi
B3rRcxP6SW5g3pnIdkuPHZTOFfQLPOIGLJdd+s0iK6x8mhb4ssoN7y3FBetC
mUHw19JOMzIPLIqM/gzcywwaJIL9MIUHqmN3HGqdZYJzNtzpfDQeaA8dtde0
Z4J6FtX9Ti48cOX8xyZxIEKCpeNVnm880F+eEim+awN/5ec+pnWCF0jfB065
xi3gWoi8FGzLC+pvLCOuay/giCWVtfccL7gvuARcqZnHf4cNSId58YK9nlel
4NocLvnS9sRoKC9I7shFMe6zeFzF0YpXxbzwRc/gUNLFKTySSzeBX5YPIi97
Y/Itg/idxLXjc+N84HtamhYJr/BjWgWXVGf5APFf3Bm/5SEuWXrlscMyH0DL
AS6HiOv0or6x5mZWfnjJxHX6Yt5b+syWrqMZkvzQuG17gtpeRHdIzz3sdIwf
kuqPvtMIb6XvK/Q81PmJHwK2G210j/fTuY1VXHmK+GEpPc5wJHaA3vNjMMQQ
8YPr1B4xngODdN81m+qcen4o6XO7E/tiiP4BNzn4eJAfng1g6mxHR+nSlYoH
jKkCEOstbaOX+Y9OaPsNxTcEQFVItMEido4eOFry6sZtAdDtzLsuMD1HJxNe
MO0MEYAtJTOHXA/N0/nVrStynwrAtdXsazVL8/QtwS0Hsz4IgHPctraR44t0
411lR5KGBGDaNuyu/tgyvfH4yyz7CQFwDaroj9NboZu73OKVmhOAez6Z60fu
r9Btnuq1PicKgmkcvbhEcZXuOZlt+VRcEIJ7EgMunVqjP3n92ibETBBMjJlS
t77YoAsX3f5iaC3I8MdSvHrfBj2++Ywkq70gdLv+NTursEl/sy72+7aHIEgk
bS/xTd+kF5yIOucXIgjxrO0W6ScIqIfjnptniSBsVnBx/TtIRPay5+rUvgpC
fchHv92ORDS4Y5/a3zpBwK+lOaoEENG/8+sTzl2CoFyX4TKcR0RE5H3p7Jwg
+H4VIKxLMSGFq06+FipC0GTol+z/hwmp6/WaJ2oJgei+1I8fF5iQLuGk5tg2
ISBoRQ684mBG+g8PDf1nIAR9hy0SCxj3fbtkNYs0GyFwayCJ9d9lRtHtM5pM
j4SAaftw7mkqC2Ld+t9w1qwQmC30mc2IsyLO1cWylWUhKNB7ErZDjRXxl3ol
HCBQ4CbHSp3TLlYkfdjBspuTAhJcfE8DrFnR7vMHytkUKKBtfba2PooVXX3K
kWh7kgLOBh9q6khsaGA+xorjCwU2I5h5PoyzoaR9Old+llMg73RZo/gaGzoT
1vgoq5YCtV/p1g842NEPedYa804KXAha3O2pwo5azC/vimfU7Zae0AfGLuyo
5KOptLoKFS4Sm5xkB9iR//rw7k1GXS6sHkqJnmVHOw/dtW7ZToXZSC9OdmYS
yvldGOl9gFFH3rA0d8qQ0HseRdYSeyqUnKAWy58hoRgP4tiRGCrs7llZtP5O
QhaF8WwyCVR4V7b5hGuIhPhZd8jNJlNhXWCw790cCYXHe9rEZFOhjF3OJZqP
jALruht7G6igioda8BuTkT7V5+/HdiqspIYz954go00HflJgN6PuPz3jGczo
d2+sGO1TGqXChfc+aY4BZOSlnPfJi0UYbgyzVUnnkJGG9/FmfQ5haOFUuPQc
kdFfND4uyC8MFoZfpAbqycjppJxCoZQwuOP8uZ0DZGQbHBFL3CUMzj6v7krx
Y0i0TTW3bZ8wmH6I5OoWZ/T3klUtKUbC4Pu82+iEIoYs8tYxYythcN09eu/B
LgwZD7rdjLwkDLH9tKACewwZ3pRL3+8rDHTb1ZOKrhjSF+r5sXBLGMxmvaoO
X8KQ3oHDO04/FAahoPqbxQEY2vaT1ZnriTAwtVqfZQrBEM275Cn9mTD4raQI
r4ZjSCVFc1burTCEBl3OIMRjSGHPiExHhjCM77zjz5GEIdlvL4+F5AhD6zyF
+etbDEl6WP+n91kYaNa3TqhlMPJh5c8cLxUGvja7eMjGEOVFbU9CtTBMs2wQ
iPkY4t96l+N4kzAIS94tvfAZQ9wNu/SYO4ThgNhWxbt0DHGcn3PJ7RGGpO85
IQblGCKtp8c49wvD9p8044xKDLE8PV8pMiYMegMvf9JrMERQl5yvmxIGtZlf
ZTfqMbRW0SF3a1EYirGB4J+NGFqyeWSmtSEM8k591cPNGJqbO3i7j0UE8mSc
tZ61YmjqIeFDFIcILNp7+0y3YWhcvvCXIb8IrHbEn59qx9BI8SWuZWERWPjA
0fL0G4YGLFR2p0mJQGbP84Q/DPx7vM/NVkEEnr7pLm1j4J7A58941EVgPZ1v
zwUG7hS3qC7VEQFtxd0yaYx47Tmci1f0GPMDOMIjGPs1m37dorBPBO4d6vwo
zuBTP3DTovOgCIjfjqo5yuBb7b/t7v0jIrBjd4G0CiOfCsHJj7stRaAjS5kv
vQ5DKP3t73+nRYD9jTRzRzWGivfb87xyEIGTTqweqV8xVNAjvNfclcFXzKRN
rgxDOVdbLrB6iYBl+YFqoxIMpSfr17reFAGxLzN/H+diKHX36pJYoAhMUJfv
5H/AUHL7J8XG+yKQMT/qG5qGoXiWLfdosSJwvSr/99aXGIqN//lpIEEERjl3
y/DHYShKN7ovOkUE/M2dbBOeYCjMkR1Ws0Xg2ivTkdp7GLq/RvfMKBSB6Nvt
Dh63MBQU5fviDBKBG5KjmhXXMHSrYnSlvEEEpmfbHj5xwpCnfH3uwxERsG/a
MdujjyG34sCBvZMijPr28uSBnRhystgjMD3PWC985PEFTQzZBWZ6WTKLQu+v
02brohg6MhChKikpCvcXbHaZTZJRvepAu428KJgaPX6XxHgeTa5sv/VcRRQy
7YynK7rIyIjpV7PwdsY4cScEljPeD9Kq1wSOicLh/Bux/E/JaKvNV0S6IwpM
d8Ztn2qTkXj7suXsoCiQ7Zvfka1JKE7s8Kb2uCj4JuTwcpiQkMi5l6leM6IQ
/vl1GMseEqLMGK5ObIiCHlf5ln5pEuLljXo5QhWDn69KTjqOsCNmU42/Pw+J
wd1MeUlmH3Y0Vu4QUJ0hBodQwMCfKDYk9bjTLTxHDMzqt1dH3WNDFnZHLC0+
i8F3oUoXw2tsqGRpp8rvajFglWrSeH2CDUWq87Uv9otBWOjpTDVRNrQrhq6o
KCoOekUfqS9fsCIvx638E9LioFykc6o5jBW90U5by1YUB6qCtdG/m6yItz66
Ze9WcTjg1rFrwpYVDRA8/ayOiUMcczFrPaP+PHQTb7oXJA5FaimqsVEsqHR7
ZKFJmDj8ndzT9/sOC1pgISXzRYlDel6M4ZoXC7JPnPV98UocxLt50WtTFqTb
XiubWywODkJP5m4TWdDPPdevDcyIg8HoTreBM8yIn2PS/v2yOFxqmvtx05gZ
GXU6mngRJGDxwoVrDYx6mX35mPQalwT0KjKhEBIzCnqrWCugLAGKtjpx+9OZ
kAZfh4TBGQnYLkO5F99PRENhQ3eenpcA2/6I7fm1RPQCWxwedpcAveN3n/73
kYg4WYSzH/pKgL731WjKLSIaW7A27HgsAWNBBJXDAkSU0vPT07VCAlYsH0Tf
UScgG+t/bZ9rJaDijQMz8BCQYMfGDu4WCWhm3rdk8meTfqdJivnTTwkQd148
1Om4SbcvOxuztiABZ53cfzWf26CLpw7SHylLwqtBUim3/hq9XX5Bvk9TEh4b
bTVfXFmlP3jFdl93myQY8W+V1P+0Sl+JU7To0peEffxdB9hkV+mdYa4jsjaS
8LXnr9e9pWX6kysTvHnhklAaLsAX9mCRjuHzZ3tmGeMiGa2DdjN0331KpLwV
SXCf7BzeyTRDHzI4nfmIKAX//hyzPJgyTS8zKl3R55ECmRDpvJdjU/QbZmFP
3qlIgVNX0Lb4wX/0v+e3fL12VgqEdb9UzC2P0OsfWirxNUnBpYtrtYrHftAP
TpxalLWUBvbtsW+EJNvwBMG7bf+dlAaViSGFg37t+NyutKye09JQcT4tOrDz
G/7y/qpztIM0OB7bpefypBNfUYzvJHtJQ4zFHrtvnL/wdIefhVP3peFcr+R1
togBnOk+a/ThcGnwLEwqiDIYxE9+VL/8/rE0vPTwKW1aHMRZCbdUHGOlIVRK
KcLfYRi3eyH5/HuKNMz8KMok64/hvJ1n/EuQNLxmNpa/KjqFO20GnxSrkIYE
Evv3UP8pvFjhg65vlTTspuGPrHuncFdvwoR2ozTQ4ne542+n8TL+V7Yp3dKg
8eiwWx3M4lcP9+19uCANScmdxjWJC3hnmSPxlJoMEOyWwxfUNvCpfT9Eb2rK
QOl9qhXT2w2cvfSo7kuaDPw4kdIpIbuJb6PrOQ/tkAHRsca4Mi4CRH3mbbh8
QAaolZefhHAR4WhOcewDOxkg6mjsk1JghsoUQa0vETJw9UlS0ueP7PBL/v6h
309kIF9X5ti3dXaYf73pwBwjAzEsuqBvTAL5pLGnh17IgPPDkUPsAyS4k4BW
v72TgQz7+ydbRBl9b8yFqn9lMnB4qFAs5TEn5IZU2EnPM9YLbf/9CvFCqnGd
cPCSDHxW+fsrZYwX4jhbWydWZcCkwTTmhiAfBET0Gn5mkoXuGFGrIGc+MI1d
0bDilYWjDmwDeRg/9L3V2nygKgs1vIeTZvYJwDfX7YUzGrLwpq0rW8pZAKpV
916xpsmCFtdvnp8PBCAjy2RYYacsGBzybl9qEwDffKemUkNZODPqy33QThDc
r3uEKhnLQuTttyMh/wmC3a6rBo8Oy8Iltv1yu18KggH9dr6NhSyU7Lm+Ntwr
CNxV8YmLZ2Wh4nhs59QJISCGvra2Oy8LT6aes1pfFYI54/cCX11kQTpZ2IcS
IQRdjfnBkRdlQTNNZXfgVyGojyjZt3xZFryYJAw1eoWgxOzr6plrsmD57SaT
zJIQJHe0XlS/KQv8g7KN7YoUiIntUo4KkAWrxzT1iL0UuH/qd//KXVl4XuLU
G2JBgYu/Jk5U35cFyZyyCsVbFHB4OcenGS4Luf58s9WPKWDhsFr39LEs/Aho
cX+RTAG9IRKci5UFefJO7e9VFFBP5VmpeS4LsbzGujsY925pN0qOVqIsyP69
Plk+TAF+NQnPmCTG+GmCv+8CBVj/ySltpMhC11Q0pwULFZayVPoc38nCqsq3
CQs+Koxd0o6vS5cF7eDgoOsSVGie38v77JMsfLzpuqGoQ4Xy/AO1m3myoOpD
1M7aTYW866aBTkWy0HzLucyCcU9P3WW+t+GLLEBv60vqYSo8X7de0imVhaRh
444FcyqE0+2z4ypkQc2kM2TamgoBt50vEKtloW3wwwrbGSpcMfBUcKmThZFu
2/vbzlHBidX7d2Mj47w5erL/c6KCqFTN99UWWVAS3p+HXKjQuEOiSembLOg5
PzTc4UaFO2aXKi07ZSGriH3XEANvu/D1y51uWRiCXwG1DDx2TyQ365cssPbx
ig26UiEh0SO9548sbC/0ld3GiGdWWPqaPMhYX1j29ct5KrC1CT3fNiILJwKc
D/k7UKFo3DXy3F9GPPNE9st2VPBkKwmN+CcLrZZmXomMfGSl+W9/mWb4YZiF
zGpBhY6dTr5jc7KQbIguvGbocd+86CJ1iXE+rosmfoZU2OvB7bx/lXGewi4X
wvZSYSbIwe7SBmO+1VLqj61USHmZZ5lAlAMJasT0OTUqnCzCDtexyDGeh0lj
FVkqcLbb7V9il4PrRgGNGlQqXGVn1zHjloO0Ykx6cYMCSjKnVf7jkwPFf/ZB
X6Yp0KOXJZMuKAcngzUOVvVTYL/nCV42MTmIjv3x5/1XCiwFp7HrSMpBV0L4
VHAuBdJfbW6ckZGDAI+OskyG/wS/vZ0oVJSDi/j3kd8BFBjYtVTroSsHc4bm
iVzaFIi1NC2L2y4HQ56BaZ5iFDC9+LKwSk8Ozh5KylBmpUBOklGqzD45sOi7
OZjXIQSB5Gf3vh2WAy7jlcTLl4Vgh9yEP9NxRr5BAs7DjOdzfPe+q5oWcpB8
iW1P7W4hsPAadQg9JQcH358XH2QRAvnvO2GPM4PfGew4PVwQOqfCtru5yQGE
//45e1EQHmJ9GjEecvAlipqQcUwQ5vbcl5i+IgdBLZfXi3kFoSL5x0pygBwU
Zk98TGK8b85d9svljGPooTG94+RFfthG+5Wr/EIOfqc2yVJN+AGbgTzDl4z8
rtMuPlbghw+X2PID3sjBOfd9ryp6+GDN63HBXLYcbP0ze8TfkA+iL7793FMn
B45ZQp29fLxQc6GtNH1dDlif/lVBOzkgXm1bWQ1BHjgo132f/MXAazy2bIhZ
HgRDMnIev8CAcsGuXBqTh1gNlmJpJgwc3Ecroijy8KU9O2ezgQRrrptV/pry
EDGdnSBxlQ00nVUbTc/Kw76rI7013Ezwy1XqYoajPJx0HEN/K4nw8IIAL7eL
PHhYit94+x8RRi+tHm/ylIcrrtyOUzMEeO1f9+24vzzk9NDpuaWbODXS/adV
jDysPVMQssxZxSujztzKj5MHF50tuNSOVfxqjLmUcII8BOX3iot+WcFb4ned
7UqWh3OG+KeY2mX8wVuOwdPZ8nAWZw61nV3EN4vTxu0b5EF/G+nEF985PJOe
GFbaLA97nfeoTHDN4TZlTzRk2+UhbZxvmDN5Fi+s8vPq/yEPlx4nyrG1zeBX
Wk3mzo/Iw49us1h81zQ+PPx31Y15C+i4sqtznRnHm/jVOLx3boHYK6nSqQu/
8b0eHqPPd28BfUGBF8eO/8YzqzKryvAtIFPhOR55shcP99cO5DXcAr6Pwuv5
K3tw06Ft62lmW4B3PvbEx5TveG3hvsk+9y2Q2tFkc7K9Fv9qf6LtWMIWWNKW
61GU/UL/nHnnuRqzAqzLNpM+q4/S2UwtRWPYFKAtxtpR7u8o/fio4jMipgAl
us4FPqlj9GG5hugOXgUI83RYK5cdpws8o0YGSCrAhDo5iiA0SXe/mx7SvlMB
Khv+3lG/OkPPk/6PHd+jALbNrQF7mmfoxJLjQe9AAUxu6y6uqc7SY5YW7t46
qAAWRT5Mvn2z9HKPff8pWSrAuY70ol7jebrYyQ5vfy8FUMzVE37JukR3mk+d
G7qiAM7n37g/PbVE/xjpd+W4jwJ04t2r85lL9IMN0pcUbinAvh03do5ZLtOv
6LtfaH6gAIZbHbP2xq/Q69QI5+TfKoD6AYLlLPs6nVLb+if8vQLQI7R2yZit
0886p9gvZyjAoW9dp8Ker9MXXxnbNeYogCB353MRtQ26HPWptW8ZAzNxxHcb
bNL9iCrH6n8qQKNod9ObNwQ0tJ+jU+GPAmyIx93rryCgYyHjZ24PKED9XOOe
kj4CkufJurjtrwIsPVZmPipBRPXiuo9eLimAQ5lLxlgYEUnu2Nt4VUAREg4v
eqfYMnoAPymrJooi7L2c8Q+7xoRmSgi/lEUVIc9Hv0o0nAlVHSif+CWtCI7m
oc/3fmFCXuZGXIc0FIGiPXiumMqMyjzNTCUOKUJ+mrnczxJmpJat0+5jqgi6
VcKEqFZmFD0vaNN6VBE2TL8/4hpiRu7+392DrRShkyxUcZSTBQnet3kwfU4R
4gpubuyzYkFOKU61X28pQrB7ceWFPywI67lh5JmjCDKBRg8afrOibT7vuB7l
K4JDyR2q/CQrOsvf2ZpVpAg7XxxYvbTOigqMttpOI0Y+pWp2iyJsyCl38tLV
BkUYrE6+QzdjQ6Xhjs9vDCnCeDZ58Ec5G/Ldd+RfkLASHL98wTzpDTtK7vH/
9FZMCWzXFw06cthRk0+ab7WkErg9n3Ynl7MjhUwSM7ZFCVLiZpzde9lRm2g5
NUxbCczn4ye4hElIY277vifGSrCUU1eiGkJCg29kohL9lUBuNbiMZEtG44F/
lpkDlIC7tyMmwo2MZhxenXG5qwR1O4r3zPiQEUFKRlX7vhKjf9uO744kI9EY
6bKyGCVgSnhc8LmCjGS8fysqPleC962+X/uayUjJ/GXYgwQlOBX0Q6qjh9Fv
80hbW6QowSETAV6xOTI6Fiw1NZitBAqGXH8mpTB04nyvpXGeErC5SR8zUWH0
/waJnzMLleCYU5eoky6G3Dclg32QEhgIun9sO4ihyz9/jXeXK0FZhW+Q3HEM
+X5OMIMqJZjf/ahW7RSGgnwkJcmNStBoeIrTyR1DYZa/7nq0MPS8sOXEkysY
itJJGG1pV4IP5aT0q34YejUpkRvXzVh/Ssb/yH0MpTb8FN38pQRW5h7R+x9j
KDPtRcC5PoZ+5Mrl0RgMFTtLmKqNMvgNyFnvTcZQ+YGfHyPGlWAgO93s7zsM
1cq9oM5PKsFY/HSEQRaGmom2N61nlYDQMkwzzMHQ917x/i8LSsBv8c9xpgBD
v770GMmuKMEdXoGzB79gaOB5fGbQuhJMuplf3F+Kob/XbQT/EpRB36hzcKQC
QzMnxG8cZVGGpUvqyrrVGFre2tP7iV0ZLA5eTd9ShyGCYPwBYQ5lcEl7PF3c
gCG2mdNp/tzK4CtzInS5CUNczWJ8f/iUYQh7K9DdgiHBzO5rB4SUYX3lCX62
DUOiD5/3vBNWBjaqX92DdgzJuJ3W5xZXBtEbIvdOfcOQkpFY6mUpZRCIjj/U
wMCaCt1c32WVweNhBusAA29jeX5ll4IyPPDzyU1g4N19p7oSlZXBsCTVcZ0R
zwCJ4izqyhAtcVGDwMDGCT+SXbSUGX713PO2FUPH/OOwBh1lWDiSWzfTzPDH
qVNe2tuVIXMhWba/keGPHaIdT/WUoTPiV5xvPYbOU37sWtmjDBr5cvGfajB0
Ye7ZK7t9ysCquPVFVCXDL63W7OX7lYHKkS4nXo6h6x9EPBSNlEHEo7HcmI6h
gPCu1gcmytDdYyct85nhnwvPdkwdUQZtG+exxDyGX5REWAotlaG2iLvlWTqG
bOwU3vafVIblPAMBn7cYko/SMea2UYb9YTe7sCQM5WwejjjnoAy/VTIErKMx
5L/1tE74eWXIErPVEorA0H53l44CF2XIsOKSfRCKofaOO+LcF5XhcHvVzlSG
H+M5I+g7LivDIOefo8evYshR/4XDOW9lOCj7QLTgAobmMvJTC/yUoVcsj7Xc
BkMC98Z1z4Uog0K3yrGJnRj6UbT8PewBQ1/c4V+SFoaSptj8CsKVQewynJNS
xBDNRqaU66kyWB1bbL0kgCEzHavDBa+UQdJguO3lKBlF/qGf5/qsDNYhz66a
hZHRKWoDaUeJMpD430kJ3CYj2cM/0hxKlcHRr4/84SoZZRfMTedXKYOqXCI1
8DQZtT5SvuXQrgwfwh+IfFYkI769T6LzJ5SBiUNt/v5nEoqIc6o6K60CQvEW
ek2d7Mjn2p0r/nIqYMT7fKiwlh3ZmSVIxSioQMD6L87XxexIDevwqVdTAcZ1
peDyS3ZUc/2A0vadKrDlVUozvws7YrKWD+U0UwFhj7o7DxfZkDe1zzj/rgq8
SFvTbqCwIZvZ9YWWIBUw6HI0TSWxof1NIq/HQ1Vg2vipl/8KK+IPPr4qE6EC
3M3CZzl/saLMBZT2MF4FkFBs4YdkVjTyLZHTIVcFPvarHZfSZEWnomwbOYdV
4PXR0W1jmixI/BMm5j6mAmJb9srpSbCg3pZ855oJFdgfekXeHGNBjjz8xKA5
FQgPfretq58Zed6v1NkkqgLc75xjjmJGdwI0n02Lq0Ji/ftjVsNMaH9iz+BR
aVXAztqtuTQzIfaSUFqmnCqwXxY3UylkQg9X++vcVFThc8Ky36dQJhR9LXaj
f7sq5L+o//ZZgQm9u0B07DBTBUsPztqso0R04UHmB10rVZj874qNrA4Rabw/
vR5prQr8b0jPdChElD2cG33UXhUEnEbltboJqNjBrabaQxXIhkzfgu0JqPlk
m8bnEFX4djuyetfHDXqkT4CfyENVkHhRa1fnvkG3jFav9nmkCsGBjQOxWzbo
P9qCz+pGM/idvtkwE71OHziyOyrjtSrECLBLNnit0Zf2pywnlqjCQ2ZvvX6m
Fbr/58S7FaWqICcW2BKfv0wn0OK4RitUYZQ6wlnvvkxnl3okQ6tThS8iCf+e
ti7RKcu+hyq+q0Isy+acfNwiXSfD9NnIlCrEv/vo1CYwT/cUmtuhLacGv29o
8bc/nqT3D+r7lgWrgWOsyHhWextdP7ExSeWBGjzYzl/+6Fwr/eXJUw2R4Wqg
2hcqoDXbTLeruyR77qkaNNfOevsq19N/fHhZz/xaDdg2/wvHyxC91W9D+kCJ
GgSsJBQJCL7Fy/iKaqrm1IDwcMTGhbcLl6k7MKe5pAakpp0wfPkHHhDYIhm7
qgZS+d0e5d+68b2LI1dcmNSB6M10ZzD+F17UQ5Uk86pDz+d/+FORPjz7rfdl
Y1V1OEO7UbZeM4wn7dEWazirDjFfQzbb56fxsiPY3VVHdZBoCsuiWM3gfWf6
x5Rd1OHujLO0cP4MLnfnaVGQpzrI3p9L8fCbxZMrl63BTx0OWR2TGeKax1OO
lsV+ilIHpYzEjTrbJbzS/jmhL0YdjozhSqL1S/jQpasuvM/V4S3fCofrrmVc
IUphh8crdfjqHOogKLGCv+m8/10hUx1uqL4UHB5fxVPPmlPiqhjjeakrZLSJ
V19Wu1Vdqw41kkrf3ksRYOQu69BCgzoc9jsf1nOGAEpv8nPN29Uhktswv+8P
Ad6NiVly/VEHg96APxfGifD+ysCTgBV1uKoWI5EqygIZ97z5nNU1IOLMzOqt
RhKjv7S9c09LA9gIXb+NxMigNrd/9rWOBiRnkLROuJDhvYPgt987NUC4SIhT
mxmDVPxT7ClDDajHN5rO7eKA5OUpqSNnNGD/0sTPso9cEOdxQWPrYw1I/VGm
PmHEBz/kLRLNozTA/7xuTrcnH4j07OK9HKMBJcrF7TFRfBBrzDGT+UID4s/X
3bjQywdPFd/nKr3XgKLQ3Txal/kh4s/wbvFyDbjzh+OjY6gANMc2ZehVaoCm
V+Bs3nsB4DmWL2ldowFOs7+lU+oEILwkiBDdpAGTe7crHuJk9L/Pt1Tw9GhA
zxj9sU2IINSbcW3V6NWAu8Gni/XeCAIHNp9i2qcB9jJNJi/KBeG+b0Vw6IgG
KD7hdRpYE4Rgy3MmzPMa8MXVTVfDVQiSjvbYnF/SgMDchM/ke0JQfMjSs2pV
A7KSzNz1XgrBzJ6Djx8wacLxAOe88HYh4NyBkiZYNSFJsWdb+oQQKNJ25hwl
a8JPacU0fjYK2Ciofhfg1YRFi1j2LF0K+Egnj3gLaALtRLJHrzEFIkUlVr5T
NCH2wfmKw/YUqOLmkYiX0ITBvzwKP0Io0EcK0diQ1oRUjj8nZ59TYI2JCPby
miD6TqUBMilAW5xxkFfVhLP+j75ebKbA4Wn3q0EamvAkpVLl8G8KuPwduDei
rQkz0reirCYpcGfQNsZ4K2P+RR+t++sUeNHbkZq+QxMa054dGMKoUNB1tIh7
tyYUIyNdVyoVWtuq67xwTUh/nX+NT44KEw37frbqawLH3a2vfqpTgVRd9E/X
UBOut3s71G+nglyZDiHmkCYM0Nru9gAV9han8y2baoLf2sNRzkNUOJm3Re70
MU2wTdqMtDlGhSsfEnS/mGvCh/jvcbVWVAh/TzWUOqEJiot7t1vZUCE1OeLE
7VOacM+dtWjDngrlCWTXflvGfoTyiHJHKvyKvXPjwFlNmJCf35/sTIXlyNUH
bx01oR0o/i9dqSAYdvUF2YXBNy9rMd+NChrBE5nu7ppAOuz0dIyBD912Qg2e
muCKEY/+//c1R7/eFs3LmtDr7qb3yoUKt7xP9j/21gQqZ3roFicqPLvYMjfr
qwnvMwfuf3WgQo6rMZuVvyZ45e1IvW1HhaZz5dSC/zQZ/dEX51PWVBiz3a0s
elcTlN1s3I+ZU4HlZK6ef5AmbBrkezmaUkHKTMP0V6gm+BI2jsXsp4Ke6Vtb
CNOE5d6vhLFdVLAwlL6YFKEJkS6dj2xpVLivxx/pFKMJFwbpfOniVEjRffC6
Ok4TEmTV34fyUgFpsOSqJGiCtdGjC2HMVJiXXfj+L5mx39fyLq5hCvBKXBw9
lqoJzeYJy2HfKaBCHVnJTtOE4T1NaruqKGDP8UPCJ1sTHDaVq+WTKXCD1Vyz
K1cT/FN7Xc8/psDTzTrYVagJ3KDxuPsmBWpnv5zbpGuCQEx13yULCmztefUu
uIGhj2Dqf2FLQsCr4bKU1awJK0v+2R5/hGD8P42DnW2asP/UtU9ZNUKQLPd5
QOkHww9Xjv50iBUCQfd2qdohTcjaem+qXkMIVvyZTdgIWnD7wX8vefUFYSTF
6XIcUQuOtJs9MJEVhI7GmmcazFqgs3nloSCTIGRLR4xYsWmBdYO2oi0SALcK
8aC3nFqgl3vyjPQOAeji2FZqJKIFcTnb23dS+aFS99lIj6gWDCY0VLVM80GO
7RrPJXEGtsqYVKnng4isMrtnUlqww+5ug3oAHxiZH10b3aIFG+lnu5sGeaEg
zmX7A5oWaAhvCD2x4IFY5ecZDSZaECDBOvPJGoO5WcOUu4e1gHQd6u1ZMDha
MhO/86gWND/QUD+eRQY2c+OHKWZa0B7idYWfjQze/stuN621IMhPe+FtPjuY
NZ1QUnfWApr1hJCkJitkPmOW7nfRAl7iWTr8ZgGyYxb1mZsWRGu96fn7mAXQ
Ehs7q6cWhGg2Fg8tMIOmbN5gz1UtoCd2nM6pYgJOb8HXD+8w9Pxz08ooiAAu
OIrTD2TwSZe1HQUClJMvRC7d04J5pUXtk0ub+I2E8tuOoVpwWoPTXWN0Ax+t
umy/O4KR37qM4kbXGl4p2iIx/kILzL6x84wuLOH/obBYk0ItCH6axt3ANoOP
/URRy0VaYIsfH2t+NY1brc5GvC3WAvuge2ov90zjattOhTIjBl/WveshPlN4
Z5rCjc+VWpA8VqOUPTyB02Lop1XbtQBvFfq5wTeCD3lMS3JMakHH5omWkNEu
/LCYZUqtvDZotwQxux5upccOaKDTCtrgZGbE3fOyjT6QQeoeV9SGNMLSjcm5
dro/FPPyqGqDwc+AK2MJ3+np5+X8zbW14Xx8T0Xhcg8d+zBt1rNHm+FryWfF
ff30qv3hhH9W2jCTqnoe+/yPzs/tIvbfSW2oyREpCHGepNt937eN95Q2KOg/
DPtNnqIvuM6702y14dXqyrak3Cm6wiOb79fOaYPncOmnEWyGHtilkrl5URu6
pZ32u7+bo+/zrDrNF6oNohw3/zuWsExf6Rw1rLivDVyGqcq9k8v0HANOms9D
bTDiseivgRW6gshx0s9H2hB/X4X29vcKnbPiR05qtDYMFayHaguv0TtF/nFB
MmP/tzKJlxwZ989A3uWZFG1InB/Y9vj9Bt1kkjaQ8lYbhJtMLMYmN+glFT5F
HGna4Gpia3bAd5OefJHo/P2jNmgJ7Jn7ihOQ11dB5EnXBrFCRxUZXSJS0dqe
JlOqDTZG8+/HjhFRf5x1dHuZNqBA+8LjHkRk5ZVwQa9SGwKzdiusJhPRbjEl
EbYGbSjYZ+vUwsOESJd2XX7xQxvENX4se7YzobJuW9tjPdqQf5+TcvsvE/Iz
DDBi/qUNTVvKFPWZmNE/sa+Srn+0YfcXYYPvGsyovfJIne6INgi8qGS/EciM
EsUd5OvnGfoo/+mRkmNBejqqGg6L2vBtT0fXe10W1H5obvvSkjZcO/1Qnt2Q
BZF8gkzk17Rh3i4ga6cLC/JqeX/Zn4kGIjfc/n54z4IgaBap8dDg4yI5dqsy
K+qbDLQNU6LBsSeVmDajP/JnO+Isp0IDQfPzionybIgiQb1UqEqDC5dN37Dr
sCFj43eBgxo0YOZ+Ml57lA1lJzek7dlKg/bT30U1QtnQXWvKysQ+GkRJjrP8
XGVD8uVvo4+cpoHB0xB9vj521Ki2lNxjQ2PUxUgH5Sl25Btt9MnNjgaJyjSf
vRvsqM51tCnoLA22XZXvtxElocu8qmS6Mw0WLrH6WJmREN0200/zKg00auV9
byIScqnaCP3iTQN6gN9RlkYS4tc+GmviQwOxiT/N17tJyIllKsf5Bg22rpkZ
qi2QEGea9r/EABqEcCzzhKsw+tmlHHveMBrwPfIt1AonIxYH1osJ4TRIdw4Q
5osjo8w6y5tqETQo5Y/fV59CRsTEhWdGT2jwQUy+sKGYjFIP7GgLeEaDGG7B
ls4RMjLLCvnD/ZwGu6zTqe6zZLQq3DUZH0+D/AXploZ1Mjoyfp2zMJEGTHr0
6E0+DM1Hfj4wnUKDXxORLDPbMZSwxmHx31saVBFaXAYBQ0ZONg5c72iwOt4W
k3gIQ/E7128pp9NgnNrUfe4UhgxfHw7Lz6BB0pndZe4OGJrkTHh+IIsGJR4z
lG1uGNL/vbfgbDYNVlom5riuY2j80KPKyU80uBUdEygSgKHoT73tN3NpoMv9
61F/EIZGgwKmnxXQgPB+zTfrCYYip5o3FYsY/Es64rKeYWj3KRnuvM80kLSr
Q26JGIpQL1NpLaFBzdXsDe73GErdcZp8B9HgQbHNqm0WhugGc8PaZTQokxvZ
dzIHQx1Hwir/lNOgsfA403oBhv5ZK6Q8/kqD3q7V6yZfMMR6nn53XxVD79Xx
Wf1SDIl7nXSYrqZBpihW01eBIV2/aXhVSwPWl6b2KtUYMgm6L3W8nuHX0lkN
kToMOTyW2yA00uApfCzIbMDQjfjing9NNBi41/JorAlDj99afrZvoYHTup1l
fQuDb/a/Z7xtDD/lQ6F5G4bQl2Bf1E4DYz2LGwHtGPpeLX3Cq4NxvoF3nMy+
Mfi2FW6V7qQB0mo+VcPAbL1mgs1dNND64mIwyMASY39n/uumwcOpZLE3DKw7
H9ii+ZPhT2vOfxwMbEqQ/ND7iwZLY8fbKYz45zjywx/9pkHfB5PFylYGX8ox
D7yPxriPDIaLM/hFyoyaTPbToCCfp4/K4P9O7Y5K4iANXja+MSysZ/DdLkY+
Oszwz3ZrGWIthjr1c4Y3RmgQLhM0OFnJ8MPhw5WZYzSwcBEWCipn8LUeSrYb
p4HhBxuooGNI0vG/u9z/GPp0trKmfcbQ1ovCDiWTNLjxY4VvVz6D742P4DlN
g35xCSnvbAz5RfSvN8wx/CM86TL2lsHvuX/PzQUaHB8cslFM+v//Lwp9Vl9i
vA/0u+l88Qw+xQd9w1YZekfS6mfCMTRV9dtqzzoNoM0k4m8whtjbrm+d2KBB
haz00tP//z3jaNqMKZMOSE9UO7JcwtDhuf0ta8w60LhtoKfWBUOOmz+z0ll1
oFz55q+D9hh6IsTrwUnWgR4xrNntCCP+vqvDdTw64Lby6qGfIoZIh7kq/fh0
4Fh1g4qEBIakTr5JVhXQgZfDSdUB/Bg64tl59gFFB0bereBRa2SUFre7x1hC
ByLvPWoWbiQjp1mWlhoVHcguy99CciEju/f7G23UdOCydjTb1dNkZHU2sG5S
XQcWHV4koCNkZNjEXCmkrQMeYTv1iVvJSCGN6fPZ7Tqgydb9Yz+BjAYdCCnL
BjpgWydOG48kIcfWVV9lWx2o47+6W/MDO7IJ3XWt2E4HntnX+Pe/YkcW4Hfl
qL0OfGU9HBLzhB3tz1zx8D6nA/ImA0EEH3Ykf3/ZodRVB1oD9h78tYcd9e9b
NLW+pgMHm88Z99exIYePM9Khj3TgSIVz57VhVnThjvma8WPGeou8ixbfWZG3
ec53zic60KtEFN1SxYpC5r3DI6J1QCXq8PizN6woc+fyaswLHXi4GhDyxpEV
LZdudrxJ0wG9N6MSjd0siOmJfbZLhg6c/7jHR7iWBXE6loapZOnA8do9SzsL
WJAk2939mdk6wPFbyWnlCQvab8yWnVuoA9tEl/5tP8SCIlo5wyqqdKD2857I
H6nMKO61h0tQjQ54CgRjr58wo9dXGw2M6nTg3HMBI9lbzCiPErFS16gDkg7t
l/aYMaOeUwIubd90QDumaCR7gQkp9osY9PXrgL49/6iUJhPSyrkhmTyoAzce
3TwRKMiE9O51L58f1oGgqIdj95aJyFTxxYfRMR2oOmxHtCkjosvu0pLT0zqw
rBhyZsdRIvLffXs5e1YHrtno/XPVJqJ7XH3tV+d1YLJa96a2ABHFZr1+sLSk
A+JbvK8GfCOgpAAW56IVHaB8vrXKlkdAacfP6/uv6QBItSOZaALKka2U2Luh
A095PYKbvQmoZFZheXNTB0z9dikKWBLQ/wD4wO0C
       "]]},
     Annotation[#, "Charting`Private`Tag$540744#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-3.3544444444441113`, 5.85441049038787}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.771624443905179*^9, 3.771624461704233*^9}},
 CellLabel->
  "Out[222]=",ExpressionUUID->"c3dc95b5-15e6-4341-980b-7975a1e8be3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"MapThread", "[", 
   RowBox[{"List", ",", 
    RowBox[{"{", 
     RowBox[{"rawcoordinate", ",", 
      RowBox[{"rawcoordinate", "/.", 
       RowBox[{"Cos", "\[Rule]", "Sin"}]}]}], "}"}]}], "]"}], ")"}]], "Input",
 CellChangeTimes->{{3.771623676945573*^9, 3.7716238831935577`*^9}, {
  3.771624486688586*^9, 
  3.7716244891235065`*^9}},ExpressionUUID->"0a5dd66f-b9dd-4b01-8fc7-\
744c4ef02c1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["24", "\[Pi]"], "-", 
        RowBox[{"6", " ", "\[Pi]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["24", "\[Pi]"], "-", 
         RowBox[{"6", " ", "\[Pi]"}]}], ")"}]}], " ", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["3", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["8", 
         RowBox[{"27", " ", "\[Pi]"}]], "-", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["8", 
          RowBox[{"27", " ", "\[Pi]"}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"]}], ")"}]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["3", "8"], " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "8"]}], " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "t"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"25", " ", 
          SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"5", " ", "t"}], "]"}]}], 
      RowBox[{"625", " ", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"6", " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"25", " ", 
           SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"5", " ", "t"}], "]"}]}], 
       RowBox[{"625", " ", "\[Pi]"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7716237017970123`*^9, 3.7716238026028767`*^9}, {
  3.771623839946898*^9, 3.7716238789830256`*^9}},
 CellLabel->
  "Out[200]=",ExpressionUUID->"e3c69e1c-e950-4abe-9e98-eb103452acc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{
   RowBox[{"Range", "[", "5", "]"}], "*", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.771622905939361*^9, 3.7716229101969557`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"d74439aa-1456-4a36-9e19-5b1c61746138"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "x"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"5", " ", "x"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.77162287919444*^9, 3.7716229106768312`*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"a01a310b-74e5-4e3b-8ef6-aedc0afee37b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "0.5"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.5", 
              RowBox[{"Cos", "[", 
               RowBox[{"-", "t"}], "]"}]}], ",", 
             RowBox[{"0.5", 
              RowBox[{"Sin", "[", 
               RowBox[{"-", "t"}], "]"}]}]}], "}"}], ",", "0.5"}], "]"}], ",",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0.5", 
               RowBox[{"Cos", "[", 
                RowBox[{"-", "t"}], "]"}]}], ",", 
              RowBox[{"0.5", 
               RowBox[{"Sin", "[", 
                RowBox[{"-", "t"}], "]"}]}]}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0.5", 
               RowBox[{"Cos", "[", 
                RowBox[{"-", "t"}], "]"}]}], ",", 
              RowBox[{"0.5", 
               RowBox[{"Sin", "[", 
                RowBox[{"-", "t"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"0.5", 
                RowBox[{"Cos", "[", 
                 RowBox[{"-", "t"}], "]"}]}], "-", 
               RowBox[{"0.5", 
                RowBox[{"Cos", "[", "t", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"0.5", 
                RowBox[{"Sin", "[", 
                 RowBox[{"-", "t"}], "]"}]}], "-", 
               RowBox[{"0.5", 
                RowBox[{"Sin", "[", "t", "]"}]}]}]}], "}"}]}], "}"}], "]"}], 
         ","}], "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "-", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "7"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7716062681348505`*^9, 3.771606370570572*^9}, {
  3.7716064132328477`*^9, 3.771606522715201*^9}, {3.7716065618286695`*^9, 
  3.7716065835060883`*^9}, {3.7716066201597633`*^9, 3.771606637079381*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"f1d2361b-d7a8-48d5-b156-e0d61046438f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 1.0170508339730098`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {414., {58., 63.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$143939$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$143939$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[{
          Circle[{0, 0}, 0.5], 
          
          Circle[{0.5 Cos[-$CellContext`t$$], 0.5 Sin[-$CellContext`t$$]}, 
           0.5], 
          
          Line[{{0, 0}, {
            0.5 Cos[-$CellContext`t$$], 0.5 Sin[-$CellContext`t$$]}}], 
          
          Line[{{0.5 Cos[-$CellContext`t$$], 0.5 Sin[-$CellContext`t$$]}, {
            0.5 Cos[-$CellContext`t$$] - 0.5 Cos[$CellContext`t$$], 
             0.5 Sin[-$CellContext`t$$] - 0.5 Sin[$CellContext`t$$]}}], 
          Null}, {Axes -> True, PlotRange -> {-1, 1}}], 
        Plot[
         Sin[$CellContext`x - $CellContext`t$$], {$CellContext`x, 0, 7}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 2 Pi, AnimationRunning -> 
         False, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{471., {102., 109.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7716063548339868`*^9, {3.771606621348881*^9, 3.7716066377201157`*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"4098b226-09e2-44cd-9526-4635b429b9c4"]
}, Open  ]]
},
WindowSize->{1440, 877},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.15 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 222, 4, 51, "Subsubsection",ExpressionUUID->"9727f5f8-a7ea-4c09-a35b-613d4dab6c65",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[808, 28, 2288, 58, 218, "Input",ExpressionUUID->"b169b39d-9651-4469-a02c-84ce19c289e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3099, 88, 2833, 54, 201, "Output",ExpressionUUID->"3bea1c36-bb26-45ab-8325-738d7681d61e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5935, 144, 2126, 56, 280, "Code",ExpressionUUID->"023134e3-91a8-4e31-9ca1-52cf2fda25a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8064, 202, 2404, 49, 345, "Output",ExpressionUUID->"7cc4475b-ff01-42b4-833c-06b70a8894f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10471, 253, 242, 4, 39, "Text",ExpressionUUID->"1432c62e-a3f4-4ed6-8b15-446955622ce9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10716, 259, 488, 13, 33, "Input",ExpressionUUID->"7a908703-b7db-49f8-9796-d0014cfcb707",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[11207, 274, 368, 9, 38, "Output",ExpressionUUID->"7e0c001b-153f-4e75-8edf-86dd8f4161f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[11578, 285, 3848, 101, 412, "Code",ExpressionUUID->"0c74168b-b54a-47ef-8131-5e5788fe977b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[15429, 388, 2782, 56, 345, "Output",ExpressionUUID->"96d54522-d3e6-4ace-abe5-d189110126f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18214, 446, 299, 6, 33, "Input",ExpressionUUID->"5610ca83-e834-4a6b-87cd-1d55f96554e2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18516, 454, 315, 7, 38, "Output",ExpressionUUID->"e9783590-51c4-466b-8952-a43cdf74e741",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18834, 463, 460, 10, 33, "Input",ExpressionUUID->"31b77ec8-74f7-4cfd-85b3-63602d0d191f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[19297, 475, 308, 6, 38, "Output",ExpressionUUID->"ca9985f2-617e-47c9-878d-f37c39286021",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[19608, 483, 829, 22, 33, "Input",ExpressionUUID->"6ab4688a-bdd1-476b-89da-35d2ec72608a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[20440, 507, 22220, 383, 280, "Output",ExpressionUUID->"6326de81-2e4a-45e3-9f6c-65e55de7ddb1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[42663, 892, 229, 4, 33, "Input",ExpressionUUID->"24455ff6-51f4-4959-986a-96e5dd073031",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[42895, 898, 12769, 341, 595, "Code",ExpressionUUID->"23c71397-0cef-4b99-9691-eb1993181fe5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[55667, 1241, 4854, 95, 377, "Output",ExpressionUUID->"6f4c8298-c084-4445-87fd-8b189daa3707",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[60524, 1338, 1554, 45, 50, "Input",ExpressionUUID->"6de262a0-05e9-48e1-b493-99569ebc30f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[62081, 1385, 1917, 49, 264, "Output",ExpressionUUID->"381fd918-04a4-4479-84e7-c1a24571efe8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[64001, 1436, 283, 5, 33, "Input",ExpressionUUID->"065855e1-f20d-4231-98dc-75e69b4ffc6e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[64287, 1443, 31259, 649, 205, "Output",ExpressionUUID->"b2856d8b-bac0-4728-a059-918b27ee8af1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[95549, 2094, 659, 18, 33, "Input",ExpressionUUID->"1387034b-19b4-45fb-a8dd-6b2073504b85",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[96211, 2114, 1537, 46, 50, "Input",ExpressionUUID->"a2f2c24d-25a7-4d49-b387-16a4859ced0b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[97751, 2162, 1518, 48, 55, "Output",ExpressionUUID->"0d589212-4b27-4208-9014-fdb082619b51",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[99272, 2212, 2987, 86, 138, "Input",ExpressionUUID->"6e12ef6d-0ff4-4d9a-ba66-9c30d2da837a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[102274, 2301, 7030, 164, 602, "Code",ExpressionUUID->"0a5a20a8-3454-4fe5-81a9-ed7d7315aced"],
Cell[109307, 2467, 3774, 131, 149, "Input",ExpressionUUID->"d361b6f1-5e13-41e5-85ac-aa57086317fa"],
Cell[113084, 2600, 7281, 169, 676, "Code",ExpressionUUID->"c5eab919-bb5f-447d-9376-ac4da98e6856",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[120390, 2773, 225, 4, 33, "Input",ExpressionUUID->"ab01e732-7019-4b0e-83ec-201f4e300b63"],
Cell[120618, 2779, 237, 6, 38, "Output",ExpressionUUID->"288efa49-6003-4485-92bd-84726e34e0d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120892, 2790, 336, 7, 33, "Input",ExpressionUUID->"d76471fc-8b14-45ea-bb86-1240b5754367"],
Cell[121231, 2799, 454, 10, 27, "Message",ExpressionUUID->"3744bb4c-cf3f-4c44-acc6-1fbace1d1457"],
Cell[121688, 2811, 452, 10, 27, "Message",ExpressionUUID->"fde8f2c8-9f18-4086-9523-9ac0a01b3a40"],
Cell[122143, 2823, 9540, 146, 76, "Message",ExpressionUUID->"ad16e3f0-c7a9-45fa-8f52-5a4588ce1164"],
Cell[131686, 2971, 454, 10, 27, "Message",ExpressionUUID->"d0ead50a-8167-4665-9dbd-041a30b8ad0a"],
Cell[132143, 2983, 453, 10, 27, "Message",ExpressionUUID->"4542383e-dfa0-42ef-88a6-d26721a01c56"],
Cell[132599, 2995, 131901, 2350, 233, "Print",ExpressionUUID->"7fe4e7a5-3e7c-4316-a9f7-aecbc395e567"],
Cell[264503, 5347, 132569, 2251, 221, "Output",ExpressionUUID->"fa59df45-afe6-4ea5-9320-0905c88ec685"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397109, 7603, 241, 4, 51, "Subsubsection",ExpressionUUID->"624157b2-ee44-4262-9a4a-fa0b768885cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[397353, 7609, 369, 8, 33, "Input",ExpressionUUID->"a57c22ff-ac83-4ae3-a82f-d0435a5f47ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[397725, 7619, 310, 6, 38, "Output",ExpressionUUID->"4b4dd943-8e6e-4453-9de8-64e5f8739c82",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[398038, 7627, 358, 8, 33, "Input",ExpressionUUID->"ceb92c2d-9226-43aa-9420-582f820fc500",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[398399, 7637, 303, 6, 38, "Output",ExpressionUUID->"40c93c2f-299d-4d83-87f6-0cbbdbf68d5e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[398705, 7645, 428, 9, 33, "Input",ExpressionUUID->"13f12794-5c9c-498c-8309-f376e403c1b6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[399136, 7656, 576, 13, 38, "Output",ExpressionUUID->"e7550af3-ead4-47dd-bfa8-484990e469db",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[399715, 7671, 532, 13, 33, "Input",ExpressionUUID->"d29e8bec-0801-4f22-9724-e80efbd6a9a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[400250, 7686, 8099, 219, 38, "Output",ExpressionUUID->"ce741440-040f-440e-a8a2-28e3e1665a7d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[408352, 7907, 229, 4, 33, "Input",ExpressionUUID->"28108080-dabb-4fd2-9fc1-c77c910a74e1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[408584, 7913, 562, 13, 33, "Input",ExpressionUUID->"c645d17e-0133-487b-b173-8780eb8a6140",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[409149, 7928, 487, 13, 55, "Output",ExpressionUUID->"8d8efea3-a7a5-477a-8d54-97a3e666cc6a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[409639, 7943, 562, 14, 33, "Input",ExpressionUUID->"99a5876b-41a4-4703-a784-51ad1f9701e1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[410204, 7959, 844, 26, 55, "Output",ExpressionUUID->"1f28591e-4fe2-470a-9c50-65ea688c2150",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[411051, 7987, 494, 11, 33, "Input",ExpressionUUID->"d90ccb7e-2138-4f98-b463-15788e043420",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[411548, 8000, 1898, 63, 55, "Output",ExpressionUUID->"c02dddee-77ef-4c97-bbe7-9e1e0d96136d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[413449, 8065, 773, 21, 33, "Input",ExpressionUUID->"f30116ae-166a-40ae-b6dc-f950056ecb19",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[414225, 8088, 2494, 81, 131, "Output",ExpressionUUID->"09e32c5a-c3c4-4b5c-bae6-3dd4ccf8479c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[416722, 8171, 232, 4, 33, "Input",ExpressionUUID->"2bc3a502-23c3-4678-8a4e-789d6d81facc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[416991, 8180, 7033, 176, 382, "Code",ExpressionUUID->"10a39830-d5c6-43dc-ba97-0c1f76e441ef"],
Cell[424027, 8358, 3565, 79, 281, "Output",ExpressionUUID->"f3809664-da4a-4a72-b5e7-0ca0ca514048"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427629, 8442, 1030, 32, 57, "Input",ExpressionUUID->"04e76c5c-c624-4819-acc2-ff9def3b3e1d"],
Cell[428662, 8476, 1028, 34, 55, "Output",ExpressionUUID->"02527822-649a-4092-af9e-24944c4c39a4"],
Cell[429693, 8512, 2265, 49, 525, "Output",ExpressionUUID->"8a61c72d-aeb2-4df6-80dd-8b8348c88db2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431995, 8566, 270, 5, 33, "Input",ExpressionUUID->"8832bf5e-9fb7-45d5-9ef6-4f0277ef7e26"],
Cell[CellGroupData[{
Cell[432290, 8575, 693, 24, 44, "Echo",ExpressionUUID->"7f7d67c0-37fa-4aac-968e-0adc205b3517"],
Cell[432986, 8601, 1504, 53, 44, "Echo",ExpressionUUID->"291c7577-2df3-4d67-9344-7c1dcfbff734"],
Cell[434493, 8656, 1735, 59, 44, "Echo",ExpressionUUID->"df2f5c2d-d6bc-439d-a041-7b1a599415a2"],
Cell[436231, 8717, 3727, 120, 119, "Echo",ExpressionUUID->"4d37e791-a7b4-4b37-a7fa-c6c291cc73d1"],
Cell[439961, 8839, 4011, 123, 119, "Echo",ExpressionUUID->"d5cf71ef-2d70-4208-bbd9-ee23845ab4a4"],
Cell[443975, 8964, 846, 30, 44, "Echo",ExpressionUUID->"76c8be34-a58d-43b9-ae07-8d372bd419ab"],
Cell[444824, 8996, 249, 8, 44, "Echo",ExpressionUUID->"bcb19b73-7e92-4d22-9450-1c4a8742e9df"],
Cell[445076, 9006, 247, 5, 27, "Print",ExpressionUUID->"de7f8d7a-7b8a-45cf-9dc7-3388d55d849d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445372, 9017, 303, 7, 33, "Input",ExpressionUUID->"dea7b975-55db-4623-b4f7-364e48f6d63e"],
Cell[445678, 9026, 22411, 387, 271, "Output",ExpressionUUID->"c3dc95b5-15e6-4341-980b-7975a1e8be3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468126, 9418, 432, 11, 33, "Input",ExpressionUUID->"0a5dd66f-b9dd-4b01-8fc7-744c4ef02c1d"],
Cell[468561, 9431, 2646, 85, 108, "Output",ExpressionUUID->"e3c69e1c-e950-4abe-9e98-eb103452acc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471244, 9521, 263, 6, 33, "Input",ExpressionUUID->"d74439aa-1456-4a36-9e19-5b1c61746138"],
Cell[471510, 9529, 506, 14, 38, "Output",ExpressionUUID->"a01a310b-74e5-4e3b-8ef6-aedc0afee37b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472053, 9548, 3254, 87, 264, "Input",ExpressionUUID->"f1d2361b-d7a8-48d5-b156-e0d61046438f"],
Cell[475310, 9637, 2684, 55, 233, "Output",ExpressionUUID->"4098b226-09e2-44cd-9526-4635b429b9c4"]
}, Open  ]]
}
]
*)

